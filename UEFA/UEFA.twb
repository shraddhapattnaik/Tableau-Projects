<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20233.23.1227.1336                               -->
<workbook original-version='18.1' source-build='2023.3.1 (20233.23.1227.1336)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='TopN' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='10'>
        <calculation class='tableau' formula='10' />
        <range granularity='5' max='20' min='5' />
      </column>
    </datasource>
    <datasource caption='PlayerGoalTotals' inline='true' name='federated.13wf8gd18l5glu0ztlax60gs60mt' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='PlayerGoalTotals' name='textscan.1e3n1gv1wnvar61c7dts317nie36'>
            <connection class='textscan' directory='C:/Users/spatt/OneDrive/Documents/My Tableau Repository/Workbooks/UEFA' filename='PlayerGoalTotals.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1e3n1gv1wnvar61c7dts317nie36' name='PlayerGoalTotals.csv' table='[PlayerGoalTotals#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Player' ordinal='1' />
            <column datatype='integer' name='Goals' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1e3n1gv1wnvar61c7dts317nie36' name='PlayerGoalTotals.csv' table='[PlayerGoalTotals#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Player' ordinal='1' />
            <column datatype='integer' name='Goals' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[PlayerGoalTotals.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;₹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[PlayerGoalTotals.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[PlayerGoalTotals.csv_C0CA01FE170741E3A8BCB9F5CB9C0221]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Player</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Player]</local-name>
            <parent-name>[PlayerGoalTotals.csv]</parent-name>
            <remote-alias>Player</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[PlayerGoalTotals.csv_C0CA01FE170741E3A8BCB9F5CB9C0221]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Goals</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Goals]</local-name>
            <parent-name>[PlayerGoalTotals.csv]</parent-name>
            <remote-alias>Goals</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[PlayerGoalTotals.csv_C0CA01FE170741E3A8BCB9F5CB9C0221]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Goals]' role='measure' type='quantitative' />
      <column datatype='string' name='[Player]' role='dimension' type='nominal' />
      <column caption='Subset Labels (copy)' datatype='string' name='[Subset Labels (copy)_1031605839355674628]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Player Set]&#13;&#10;THEN &quot;Top &quot; + str([Parameters].[Parameter 1]) + &quot; Players&quot;&#13;&#10;ELSE &quot;Others&quot;&#13;&#10;END' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='PlayerGoalTotals.csv' datatype='table' name='[__tableau_internal_object_id__].[PlayerGoalTotals.csv_C0CA01FE170741E3A8BCB9F5CB9C0221]' role='measure' type='quantitative' />
      <column-instance column='[Player Set]' derivation='InOut' name='[io:Player Set:nk]' pivot='key' type='nominal' />
      <group caption='Player Set' name='[Player Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='SUM([Goals])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[Player]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[io:Player Set:nk]' palette='sf_bluegrass' type='palette'>
            <map to='#053661'>
              <bucket>true</bucket>
            </map>
            <map to='#94e7a8'>
              <bucket>false</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Indonesia&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='TopN' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='10'>
          <calculation class='tableau' formula='10' />
          <range granularity='5' max='20' min='5' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='PlayerGoalTotals.csv' id='PlayerGoalTotals.csv_C0CA01FE170741E3A8BCB9F5CB9C0221'>
            <properties context=''>
              <relation connection='textscan.1e3n1gv1wnvar61c7dts317nie36' name='PlayerGoalTotals.csv' table='[PlayerGoalTotals#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='Player' ordinal='1' />
                  <column datatype='integer' name='Goals' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='AllTimeRankingByClub' inline='true' name='federated.1oyngcr15cye6018af6f31xewaly' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='AllTimeRankingByClub' name='textscan.1f0t5t21puhad414wijkb1luk5r3'>
            <connection class='textscan' cleaning='yes' compat='no' csvFile='C:/Users/spatt/Downloads/archive/AllTimeRankingByClub.csv' dataRefreshTime='' directory='C:/Users/spatt/OneDrive/Documents/My Tableau Repository/Workbooks/UEFA' filename='AllTimeRankingByClub.csv' interpretationMode='8' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1f0t5t21puhad414wijkb1luk5r3' name='AllTimeRankingByClub.csv' table='[AllTimeRankingByClub#csv]' type='table'>
          <columns character-set='UTF-16LE' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='Position' ordinal='0' />
            <column datatype='string' name='Club' ordinal='1' />
            <column datatype='string' name='Country' ordinal='2' />
            <column datatype='integer' name='Participated' ordinal='3' />
            <column datatype='integer' name='Titles' ordinal='4' />
            <column datatype='integer' name='Played' ordinal='5' />
            <column datatype='integer' name='Win' ordinal='6' />
            <column datatype='integer' name='Draw' ordinal='7' />
            <column datatype='integer' name='Loss' ordinal='8' />
            <column datatype='integer' name='Goals For' ordinal='9' />
            <column datatype='real' name='Goals Against' ordinal='10' />
            <column datatype='real' name='Pts' ordinal='11' />
            <column datatype='real' name='Goal Diff' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1f0t5t21puhad414wijkb1luk5r3' name='AllTimeRankingByClub.csv' table='[AllTimeRankingByClub#csv]' type='table'>
          <columns character-set='UTF-16LE' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='Position' ordinal='0' />
            <column datatype='string' name='Club' ordinal='1' />
            <column datatype='string' name='Country' ordinal='2' />
            <column datatype='integer' name='Participated' ordinal='3' />
            <column datatype='integer' name='Titles' ordinal='4' />
            <column datatype='integer' name='Played' ordinal='5' />
            <column datatype='integer' name='Win' ordinal='6' />
            <column datatype='integer' name='Draw' ordinal='7' />
            <column datatype='integer' name='Loss' ordinal='8' />
            <column datatype='integer' name='Goals For' ordinal='9' />
            <column datatype='real' name='Goals Against' ordinal='10' />
            <column datatype='real' name='Pts' ordinal='11' />
            <column datatype='real' name='Goal Diff' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[AllTimeRankingByClub.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-16LE&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;₹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Position</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Position]</local-name>
            <parent-name>[AllTimeRankingByClub.csv]</parent-name>
            <remote-alias>Position</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[AllTimeRankingByClub.csv_E968113FC5934951986A9C7B4B9FC56C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Club</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Club]</local-name>
            <parent-name>[AllTimeRankingByClub.csv]</parent-name>
            <remote-alias>Club</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[AllTimeRankingByClub.csv_E968113FC5934951986A9C7B4B9FC56C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[AllTimeRankingByClub.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[AllTimeRankingByClub.csv_E968113FC5934951986A9C7B4B9FC56C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Participated</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Participated]</local-name>
            <parent-name>[AllTimeRankingByClub.csv]</parent-name>
            <remote-alias>Participated</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[AllTimeRankingByClub.csv_E968113FC5934951986A9C7B4B9FC56C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Titles</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Titles]</local-name>
            <parent-name>[AllTimeRankingByClub.csv]</parent-name>
            <remote-alias>Titles</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[AllTimeRankingByClub.csv_E968113FC5934951986A9C7B4B9FC56C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Played</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Played]</local-name>
            <parent-name>[AllTimeRankingByClub.csv]</parent-name>
            <remote-alias>Played</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[AllTimeRankingByClub.csv_E968113FC5934951986A9C7B4B9FC56C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Win</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Win]</local-name>
            <parent-name>[AllTimeRankingByClub.csv]</parent-name>
            <remote-alias>Win</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[AllTimeRankingByClub.csv_E968113FC5934951986A9C7B4B9FC56C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Draw</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Draw]</local-name>
            <parent-name>[AllTimeRankingByClub.csv]</parent-name>
            <remote-alias>Draw</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[AllTimeRankingByClub.csv_E968113FC5934951986A9C7B4B9FC56C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Loss</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Loss]</local-name>
            <parent-name>[AllTimeRankingByClub.csv]</parent-name>
            <remote-alias>Loss</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[AllTimeRankingByClub.csv_E968113FC5934951986A9C7B4B9FC56C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Goals For</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Goals For]</local-name>
            <parent-name>[AllTimeRankingByClub.csv]</parent-name>
            <remote-alias>Goals For</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[AllTimeRankingByClub.csv_E968113FC5934951986A9C7B4B9FC56C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Goals Against</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Goals Against]</local-name>
            <parent-name>[AllTimeRankingByClub.csv]</parent-name>
            <remote-alias>Goals Against</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[AllTimeRankingByClub.csv_E968113FC5934951986A9C7B4B9FC56C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pts</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Pts]</local-name>
            <parent-name>[AllTimeRankingByClub.csv]</parent-name>
            <remote-alias>Pts</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[AllTimeRankingByClub.csv_E968113FC5934951986A9C7B4B9FC56C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Goal Diff</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Goal Diff]</local-name>
            <parent-name>[AllTimeRankingByClub.csv]</parent-name>
            <remote-alias>Goal Diff</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[AllTimeRankingByClub.csv_E968113FC5934951986A9C7B4B9FC56C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Subset Labels' datatype='string' name='[Calculation_1031605839274131456]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Top N Clubs By Wins]&#13;&#10;THEN &quot;Top &quot; + str([Parameters].[Parameter 1]) + &quot; Clubs&quot;&#13;&#10;ELSE &quot;Others&quot;&#13;&#10;END' />
      </column>
      <column caption='Zero Axis' datatype='integer' name='[Calculation_1031605839345786881]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='0' />
      </column>
      <column datatype='string' name='[Club]' role='dimension' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;ENG&quot;' value='&quot;United Kingdom&quot;' />
          <semantic-value key='&quot;POR&quot;' value='&quot;Portugal&quot;' />
          <semantic-value key='&quot;SCO&quot;' value='&quot;United Kingdom&quot;' />
        </semantic-values>
      </column>
      <column datatype='integer' name='[Titles]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='AllTimeRankingByClub.csv' datatype='table' name='[__tableau_internal_object_id__].[AllTimeRankingByClub.csv_E968113FC5934951986A9C7B4B9FC56C]' role='measure' type='quantitative' />
      <column-instance column='[Top N Clubs By Wins]' derivation='InOut' name='[io:Top N Clubs By Wins:nk]' pivot='key' type='nominal' />
      <group caption='Top N Clubs By Wins' name='[Top N Clubs By Wins]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='SUM([Titles])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[Club]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[io:Top N Clubs By Wins:nk]' palette='sf_bluegrass' type='palette'>
            <map to='#053661'>
              <bucket>true</bucket>
            </map>
            <map to='#94e7a8'>
              <bucket>false</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Indonesia&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Position' />
        <field-sort-custom-order field='Club' />
        <field-sort-custom-order field='Country' />
        <field-sort-custom-order field='Participated' />
        <field-sort-custom-order field='Titles' />
        <field-sort-custom-order field='Played' />
        <field-sort-custom-order field='Win' />
        <field-sort-custom-order field='Draw' />
        <field-sort-custom-order field='Loss' />
        <field-sort-custom-order field='Goals For' />
        <field-sort-custom-order field='Goals Against' />
        <field-sort-custom-order field='Pts' />
        <field-sort-custom-order field='Goal Diff' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <datasource-dependencies datasource='Parameters'>
        <column caption='TopN' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='10'>
          <calculation class='tableau' formula='10' />
          <range granularity='5' max='20' min='5' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='AllTimeRankingByClub.csv' id='AllTimeRankingByClub.csv_E968113FC5934951986A9C7B4B9FC56C'>
            <properties context=''>
              <relation connection='textscan.1f0t5t21puhad414wijkb1luk5r3' name='AllTimeRankingByClub.csv' table='[AllTimeRankingByClub#csv]' type='table'>
                <columns character-set='UTF-16LE' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='Position' ordinal='0' />
                  <column datatype='string' name='Club' ordinal='1' />
                  <column datatype='string' name='Country' ordinal='2' />
                  <column datatype='integer' name='Participated' ordinal='3' />
                  <column datatype='integer' name='Titles' ordinal='4' />
                  <column datatype='integer' name='Played' ordinal='5' />
                  <column datatype='integer' name='Win' ordinal='6' />
                  <column datatype='integer' name='Draw' ordinal='7' />
                  <column datatype='integer' name='Loss' ordinal='8' />
                  <column datatype='integer' name='Goals For' ordinal='9' />
                  <column datatype='real' name='Goals Against' ordinal='10' />
                  <column datatype='real' name='Pts' ordinal='11' />
                  <column datatype='real' name='Goal Diff' ordinal='12' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='PlayerAppearDetails+' inline='true' name='federated.166k8561fjgdj21gctff218zft14' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='PlayerAppearDetails' name='textscan.16mgzoi0nhjfvc199r7ry1en4awg'>
            <connection class='textscan' directory='C:/Users/spatt/OneDrive/Documents/My Tableau Repository/Workbooks/UEFA' filename='PlayerAppearDetails.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='1' />
              <expression op='1' />
            </expression>
          </clause>
          <relation connection='textscan.16mgzoi0nhjfvc199r7ry1en4awg' name='PlayerAppearDetails.csv' table='[PlayerAppearDetails#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='string' name='Player' ordinal='1' />
              <column datatype='string' name='Club' ordinal='2' />
              <column datatype='integer' name='Appearances' ordinal='3' />
            </columns>
          </relation>
          <relation connection='textscan.16mgzoi0nhjfvc199r7ry1en4awg' name='Radial Bar chart values.txt' table='[Radial Bar chart values#txt]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN'>
              <column datatype='integer' name='Value' ordinal='0' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='1' />
              <expression op='1' />
            </expression>
          </clause>
          <relation connection='textscan.16mgzoi0nhjfvc199r7ry1en4awg' name='PlayerAppearDetails.csv' table='[PlayerAppearDetails#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='string' name='Player' ordinal='1' />
              <column datatype='string' name='Club' ordinal='2' />
              <column datatype='integer' name='Appearances' ordinal='3' />
            </columns>
          </relation>
          <relation connection='textscan.16mgzoi0nhjfvc199r7ry1en4awg' name='Radial Bar chart values.txt' table='[Radial Bar chart values#txt]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN'>
              <column datatype='integer' name='Value' ordinal='0' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[PlayerAppearDetails.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;₹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Radial Bar chart values.txt]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;₹&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[PlayerAppearDetails.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[PlayerAppearDetails.csv_DE60041F22AB4069B75E3A35A88043CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Player</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Player]</local-name>
            <parent-name>[PlayerAppearDetails.csv]</parent-name>
            <remote-alias>Player</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[PlayerAppearDetails.csv_DE60041F22AB4069B75E3A35A88043CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Club</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Club]</local-name>
            <parent-name>[PlayerAppearDetails.csv]</parent-name>
            <remote-alias>Club</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[PlayerAppearDetails.csv_DE60041F22AB4069B75E3A35A88043CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Appearances</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Appearances]</local-name>
            <parent-name>[PlayerAppearDetails.csv]</parent-name>
            <remote-alias>Appearances</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[PlayerAppearDetails.csv_DE60041F22AB4069B75E3A35A88043CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Value</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Value]</local-name>
            <parent-name>[Radial Bar chart values.txt]</parent-name>
            <remote-alias>Value</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[PlayerAppearDetails.csv_DE60041F22AB4069B75E3A35A88043CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='My_index' datatype='integer' name='[Calculation_1031605839360077831]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='INDEX()-1'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='My_Total' datatype='integer' name='[Calculation_1031605839360241672]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_MAX(SUM([Appearances]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='My_Rank' datatype='integer' name='[Calculation_1031605839360409609]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK_UNIQUE([Calculation_1031605839360241672],&apos;asc&apos;)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Percentage' datatype='real' name='[Calculation_1031605839360770059]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_1031605839360241672]/[My_Total (copy)_1031605839360700426]'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='X' datatype='real' name='[Calculation_1031605839360876556]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COS(RADIANS([Calculation_1031605839360077831]*[Calculation_1031605839360770059]))*[Calculation_1031605839360409609]'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Y' datatype='real' name='[Calculation_1031605839361024013]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SIN(RADIANS([Calculation_1031605839360077831]*[Calculation_1031605839360770059]))*[Calculation_1031605839360409609]'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='My_Total_Max' datatype='integer' name='[My_Total (copy)_1031605839360700426]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_MAX(SUM([Appearances]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='string' name='[Player]' role='dimension' type='nominal' />
      <column aggregation='None' caption='Path' datatype='integer' name='[Value (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[Value]' peg='0' size='1' />
      </column>
      <column datatype='integer' name='[Value]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='PlayerAppearDetails.csv' datatype='table' name='[__tableau_internal_object_id__].[PlayerAppearDetails.csv_DE60041F22AB4069B75E3A35A88043CF]' role='measure' type='quantitative' />
      <column-instance column='[Player]' derivation='None' name='[none:Player:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='0.935673' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.0643275' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Player:nk]' palette='sf_bluegrass' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Álvaro Arbeloa&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Carles Puyol&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dejan Stanković&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fernandinho&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Giovane Elber&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Javier Zanetti&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kevin De Bruyne&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mario Götze&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Neymar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Predrag Djordjević&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sami Khedira&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tomáš Hübschman&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Adrien Rabiot&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Arturo Vidal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Daniele De Rossi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Edwin van der Sar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gareth Bale&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iván Helguera&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;José Bosingwa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Luis Suárez&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Michael Carrick&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Paul Scholes&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Robert Pirès&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Steven Gerrard&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Xabi Alonso&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Alessio Tacchinardi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bernardo Silva&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;David Alaba&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Erik Hoftun&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gianluca Pessotto&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jamie Carragher&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Júlio César&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Manuel Neuer&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mikaël Silvestre&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pepe Reina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Roy Makaay&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Thiago Silva&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Zé Roberto&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Andriy Pyatov&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Christian Panucci&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Diego Godín&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fernando Torres&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hasan Salihamidžić&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jesús Navas&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kylian Mbappé&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Martín Demichelis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nwankwo Kanu&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Raúl Albiol&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Santiago Solari&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Walter Samuel&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Álvaro Morata&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Casemiro&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dida&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fernando&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gonzalo Higuaín&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jefferson Farfán&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Keylor Navas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mario Mandžukić&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nicky Butt&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rafinha&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Samuel Eto’o&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tomáš Rosický&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Alex&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bixente Lizarazu&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;David Beckham&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Esteban Cambiasso&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gianluca Zambrotta&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jan Oblak&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kaká&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marc-André ter Stegen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Miralem Pjanić&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Petr Čech&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ruud van Nistelrooy&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Thibaut Courtois&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Zinédine Zidane&quot;</bucket>
            </map>
            <map to='#94e7a8'>
              <bucket>&quot;Cristiano Ronaldo&quot;</bucket>
            </map>
            <map to='#94e7a8'>
              <bucket>&quot;Iker Casillas&quot;</bucket>
            </map>
            <map to='#94e7a8'>
              <bucket>&quot;Karim Benzema&quot;</bucket>
            </map>
            <map to='#94e7a8'>
              <bucket>&quot;Lionel Messi&quot;</bucket>
            </map>
            <map to='#94e7a8'>
              <bucket>&quot;Raúl González&quot;</bucket>
            </map>
            <map to='#94e7a8'>
              <bucket>&quot;Ryan Giggs&quot;</bucket>
            </map>
            <map to='#94e7a8'>
              <bucket>&quot;Sergio Ramos&quot;</bucket>
            </map>
            <map to='#94e7a8'>
              <bucket>&quot;Thomas Müller&quot;</bucket>
            </map>
            <map to='#94e7a8'>
              <bucket>&quot;Toni Kroos&quot;</bucket>
            </map>
            <map to='#94e7a8'>
              <bucket>&quot;Xavi Hernández&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Antonis Nikopolidis&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dani Alves&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Edin Džeko&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fredrik Ljungberg&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Isco&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jordi Alba&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lúcio&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mesut Özil&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Patrick Kluivert&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Roar Strand&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Seydou Keita&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Willy Sagnol&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alessandro Costacurta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ashley Cole&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Danilo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Emerson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gary Neville&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ivan Rakitić&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Joshua Kimmich&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Luisão&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Michael Essien&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pavel Nedvěd&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Roberto Carlos&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sylvain Wiltord&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Anthony Réveillère&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ederson&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Frank de Boer&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;John O’Shea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lucas Moura&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Maxwell&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paolo Maldini&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rio Ferdinand&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sergio Busquets&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;William Gallas&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Alex Sandro&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Blaise Matuidi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;David Silva&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fabinho&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gianluigi Buffon&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Javi Martínez&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kakha Kaladze&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Marcelo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mohamed Salah&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Philipp Lahm&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Thierry Henry&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Zlatan Ibrahimović&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Andriy Shevchenko&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Clarence Seedorf&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dimitar Berbatov&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Filippo Inzaghi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hernán Crespo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;João Félix&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Leonardo Bonucci&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Massimo Ambrosini&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ole Gunnar Solskjær&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saúl Ñíguez&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Wayne Rooney&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ángel Correa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Claude Makelele&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Douglas Costa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Florent Malouda&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hugo Lloris&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;João Moutinho&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lilian Thuram&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mateo Kovačić&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Olexandr Shovkovskiy&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ricardo Carvalho&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sergei Ignashevich&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Wes Brown&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Antoine Griezmann&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Daley Blind&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Edgar Davids&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Frank Lampard&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;İlkay Gündoğan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;John Terry&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lucho González&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mehmet Scholl&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Patrice Evra&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rivaldo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Willian&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Arjen Robben&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dani Carvajal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Edinson Cavani&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gaël Clichy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iván Córdoba&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jörg Butt&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Luís Figo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Michael Ballack&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Patrick Vieira&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Robert Lewandowski&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sidney Govou&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Wojciech Szczęsny&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Andrea Pirlo&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;César Azpilicueta&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Didier Deschamps&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fernando Hierro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Grégory Coupet&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jens Lehmann&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Koke&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mark van Bommel&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nicolas Anelka&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Raheem Sterling&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Samuel Kuffour&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Alexis Sánchez&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Branislav Ivanović&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Deco&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fabio Cannavaro&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Giorgio Chiellini&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Javier Mascherano&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Marco Verratti&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nani&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Phillip Cocu&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sadio Mané&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Alessandro Del Piero&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Axel Witsel&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Darijo Srna&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Emmanuel Eboué&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gennaro Gattuso&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jaap Stam&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Juan Verón&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Luka Modrić&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Michael Reiziger&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pedro Rodríguez&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Roque Santa Cruz&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Thiago Alcántara&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Yaroslav Rakits’kyy&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ángel Di María&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Claudio Pizarro&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Eden Hazard&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Franck Ribéry&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Igor Akinfeev&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;John Arne Riise&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mats Hummels&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oliver Kahn&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ricardo Quaresma&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sergio Agüero&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Wesley Sneijder&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Andrés Iniesta&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cesc Fàbregas&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Didier Drogba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fernando Morientes&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guti&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jérôme Boateng&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kolo Touré&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Marquinhos&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nicolás Otamendi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Raphaël Varane&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Santiago Cañizares&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Víctor Valdés&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Alessandro Nesta&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bastian Schweinsteiger&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Darren Fletcher&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Éric Abidal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gerard Piqué&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;James Milner&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Julian Draxler&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Maicon Sisenando&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Míchel Salgado&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pepe&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Roy Keane&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Thiago Motta&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Yaya Touré&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Indonesia&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='PlayerAppearDetails.csv' id='PlayerAppearDetails.csv_DE60041F22AB4069B75E3A35A88043CF'>
            <properties context=''>
              <relation join='inner' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='1' />
                    <expression op='1' />
                  </expression>
                </clause>
                <relation connection='textscan.16mgzoi0nhjfvc199r7ry1en4awg' name='PlayerAppearDetails.csv' table='[PlayerAppearDetails#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                    <column datatype='integer' name='F1' ordinal='0' />
                    <column datatype='string' name='Player' ordinal='1' />
                    <column datatype='string' name='Club' ordinal='2' />
                    <column datatype='integer' name='Appearances' ordinal='3' />
                  </columns>
                </relation>
                <relation connection='textscan.16mgzoi0nhjfvc199r7ry1en4awg' name='Radial Bar chart values.txt' table='[Radial Bar chart values#txt]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_IN'>
                    <column datatype='integer' name='Value' ordinal='0' />
                  </columns>
                </relation>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='CoachesAppearDetails+' inline='true' name='federated.0mz60ro0p3znrf196kfgv1fxce04' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='CoachesAppearDetails' name='textscan.01hpavt0zfag1317o8u7y074450h'>
            <connection class='textscan' directory='C:/Users/spatt/OneDrive/Documents/My Tableau Repository/Workbooks/UEFA' filename='CoachesAppearDetails.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='1' />
              <expression op='1' />
            </expression>
          </clause>
          <relation connection='textscan.01hpavt0zfag1317o8u7y074450h' name='CoachesAppearDetails.csv' table='[CoachesAppearDetails#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='string' name='Coach' ordinal='1' />
              <column datatype='string' name='Club' ordinal='2' />
              <column datatype='integer' name='Appearance' ordinal='3' />
            </columns>
          </relation>
          <relation connection='textscan.01hpavt0zfag1317o8u7y074450h' name='Radial Bar chart values.txt' table='[Radial Bar chart values#txt]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN'>
              <column datatype='integer' name='Value' ordinal='0' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='1' />
              <expression op='1' />
            </expression>
          </clause>
          <relation connection='textscan.01hpavt0zfag1317o8u7y074450h' name='CoachesAppearDetails.csv' table='[CoachesAppearDetails#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='string' name='Coach' ordinal='1' />
              <column datatype='string' name='Club' ordinal='2' />
              <column datatype='integer' name='Appearance' ordinal='3' />
            </columns>
          </relation>
          <relation connection='textscan.01hpavt0zfag1317o8u7y074450h' name='Radial Bar chart values.txt' table='[Radial Bar chart values#txt]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN'>
              <column datatype='integer' name='Value' ordinal='0' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[CoachesAppearDetails.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;₹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Radial Bar chart values.txt]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;₹&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[CoachesAppearDetails.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CoachesAppearDetails.csv_092BAB3ED035426390FDBD615C5CD45B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Coach</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Coach]</local-name>
            <parent-name>[CoachesAppearDetails.csv]</parent-name>
            <remote-alias>Coach</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CoachesAppearDetails.csv_092BAB3ED035426390FDBD615C5CD45B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Club</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Club]</local-name>
            <parent-name>[CoachesAppearDetails.csv]</parent-name>
            <remote-alias>Club</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CoachesAppearDetails.csv_092BAB3ED035426390FDBD615C5CD45B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Appearance</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Appearance]</local-name>
            <parent-name>[CoachesAppearDetails.csv]</parent-name>
            <remote-alias>Appearance</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CoachesAppearDetails.csv_092BAB3ED035426390FDBD615C5CD45B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Value</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Value]</local-name>
            <parent-name>[Radial Bar chart values.txt]</parent-name>
            <remote-alias>Value</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CoachesAppearDetails.csv_092BAB3ED035426390FDBD615C5CD45B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='My_Index' datatype='integer' name='[Calculation_960955620434489346]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='INDEX()-1'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='My_Total' datatype='integer' name='[Calculation_960955620435001347]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_MAX(SUM([Appearance]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='My_Rank' datatype='integer' name='[Calculation_960955620435337221]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK_UNIQUE([Calculation_960955620435001347],&apos;asc&apos;)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Percentage' datatype='real' name='[Calculation_960955620435468294]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_960955620435001347]/[My_Total (copy)_960955620435288068]'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='X' datatype='real' name='[Calculation_960955620435558407]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COS(RADIANS([Calculation_960955620434489346]*[Calculation_960955620435468294]))*[Calculation_960955620435337221]'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='string' name='[Coach]' role='dimension' type='nominal' />
      <column caption='My_Total_Max' datatype='integer' name='[My_Total (copy)_960955620435288068]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_MAX(SUM([Appearance]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column aggregation='None' caption='Value (bin)' datatype='integer' name='[Value (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[Value]' peg='0' size='1' />
      </column>
      <column datatype='integer' name='[Value]' role='measure' type='quantitative' />
      <column caption='Y' datatype='real' name='[X (copy)_960955620435722248]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SIN(RADIANS([Calculation_960955620434489346]*[Calculation_960955620435468294]))*[Calculation_960955620435337221]'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='CoachesAppearDetails.csv' datatype='table' name='[__tableau_internal_object_id__].[CoachesAppearDetails.csv_092BAB3ED035426390FDBD615C5CD45B]' role='measure' type='quantitative' />
      <column-instance column='[Coach]' derivation='None' name='[none:Coach:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Coach:nk]' type='palette'>
            <map to='#94e7a8'>
              <bucket>&quot;Arsène Wenger&quot;</bucket>
            </map>
            <map to='#94e7a8'>
              <bucket>&quot;Carlo Ancelotti&quot;</bucket>
            </map>
            <map to='#94e7a8'>
              <bucket>&quot;José Mourinho&quot;</bucket>
            </map>
            <map to='#94e7a8'>
              <bucket>&quot;Josep Guardiola&quot;</bucket>
            </map>
            <map to='#94e7a8'>
              <bucket>&quot;Jürgen Klopp&quot;</bucket>
            </map>
            <map to='#94e7a8'>
              <bucket>&quot;Louis van Gaal&quot;</bucket>
            </map>
            <map to='#94e7a8'>
              <bucket>&quot;Massimiliano Allegri&quot;</bucket>
            </map>
            <map to='#94e7a8'>
              <bucket>&quot;Mircea Lucescu&quot;</bucket>
            </map>
            <map to='#94e7a8'>
              <bucket>&quot;Ottmar Hitzfeld&quot;</bucket>
            </map>
            <map to='#94e7a8'>
              <bucket>&quot;Sir Alex Ferguson&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Indonesia&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='CoachesAppearDetails.csv' id='CoachesAppearDetails.csv_092BAB3ED035426390FDBD615C5CD45B'>
            <properties context=''>
              <relation join='inner' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='1' />
                    <expression op='1' />
                  </expression>
                </clause>
                <relation connection='textscan.01hpavt0zfag1317o8u7y074450h' name='CoachesAppearDetails.csv' table='[CoachesAppearDetails#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                    <column datatype='integer' name='F1' ordinal='0' />
                    <column datatype='string' name='Coach' ordinal='1' />
                    <column datatype='string' name='Club' ordinal='2' />
                    <column datatype='integer' name='Appearance' ordinal='3' />
                  </columns>
                </relation>
                <relation connection='textscan.01hpavt0zfag1317o8u7y074450h' name='Radial Bar chart values.txt' table='[Radial Bar chart values#txt]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_IN'>
                    <column datatype='integer' name='Value' ordinal='0' />
                  </columns>
                </relation>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='All Time Winners Rankings By Club'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Tableau Regular' fontsize='12'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AllTimeRankingByClub' name='federated.1oyngcr15cye6018af6f31xewaly' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='TopN' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='10'>
              <calculation class='tableau' formula='10' />
              <range granularity='5' max='20' min='5' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1oyngcr15cye6018af6f31xewaly'>
            <column caption='Subset Labels' datatype='string' name='[Calculation_1031605839274131456]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Top N Clubs By Wins]&#13;&#10;THEN &quot;Top &quot; + str([Parameters].[Parameter 1]) + &quot; Clubs&quot;&#13;&#10;ELSE &quot;Others&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Club]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Titles]' role='measure' type='quantitative' />
            <column-instance column='[Top N Clubs By Wins]' derivation='InOut' name='[io:Top N Clubs By Wins:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1031605839274131456]' derivation='None' name='[none:Calculation_1031605839274131456:nk]' pivot='key' type='nominal' />
            <column-instance column='[Club]' derivation='None' name='[none:Club:nk]' pivot='key' type='nominal' />
            <column-instance column='[Titles]' derivation='Sum' name='[sum:Titles:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1oyngcr15cye6018af6f31xewaly].[none:Club:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Titles])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:Club:nk]' member='&quot;AC Milan&quot;' />
                  <groupfilter function='member' level='[none:Club:nk]' member='&quot;AFC Ajax&quot;' />
                  <groupfilter function='member' level='[none:Club:nk]' member='&quot;Aston Villa FC&quot;' />
                  <groupfilter function='member' level='[none:Club:nk]' member='&quot;Borussia Dortmund&quot;' />
                  <groupfilter function='member' level='[none:Club:nk]' member='&quot;Celtic FC&quot;' />
                  <groupfilter function='member' level='[none:Club:nk]' member='&quot;Chelsea FC&quot;' />
                  <groupfilter function='member' level='[none:Club:nk]' member='&quot;FC Barcelona&quot;' />
                  <groupfilter function='member' level='[none:Club:nk]' member='&quot;FC Bayern München&quot;' />
                  <groupfilter function='member' level='[none:Club:nk]' member='&quot;FC Internazionale Milano&quot;' />
                  <groupfilter function='member' level='[none:Club:nk]' member='&quot;FC Porto&quot;' />
                  <groupfilter function='member' level='[none:Club:nk]' member='&quot;FCSB&quot;' />
                  <groupfilter function='member' level='[none:Club:nk]' member='&quot;Feyenoord&quot;' />
                  <groupfilter function='member' level='[none:Club:nk]' member='&quot;FK Crvena zvezda&quot;' />
                  <groupfilter function='member' level='[none:Club:nk]' member='&quot;Hamburger SV&quot;' />
                  <groupfilter function='member' level='[none:Club:nk]' member='&quot;Juventus&quot;' />
                  <groupfilter function='member' level='[none:Club:nk]' member='&quot;Liverpool FC&quot;' />
                  <groupfilter function='member' level='[none:Club:nk]' member='&quot;Manchester City FC&quot;' />
                  <groupfilter function='member' level='[none:Club:nk]' member='&quot;Manchester United&quot;' />
                  <groupfilter function='member' level='[none:Club:nk]' member='&quot;Nottingham Forest FC&quot;' />
                  <groupfilter function='member' level='[none:Club:nk]' member='&quot;Olympique de Marseille&quot;' />
                  <groupfilter function='member' level='[none:Club:nk]' member='&quot;PSV Eindhoven&quot;' />
                  <groupfilter function='member' level='[none:Club:nk]' member='&quot;Real Madrid CF&quot;' />
                  <groupfilter function='member' level='[none:Club:nk]' member='&quot;SL Benfica&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1oyngcr15cye6018af6f31xewaly].[sum:Titles:qk]' included-values='in-range'>
            <min>1</min>
            <max>14</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1oyngcr15cye6018af6f31xewaly].[none:Club:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1oyngcr15cye6018af6f31xewaly].[sum:Titles:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1oyngcr15cye6018af6f31xewaly].[sum:Titles:qk]</column>
            <column>[federated.1oyngcr15cye6018af6f31xewaly].[none:Club:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1oyngcr15cye6018af6f31xewaly].[sum:Titles:qk]' value='48' />
            <format attr='display' class='0' field='[federated.1oyngcr15cye6018af6f31xewaly].[sum:Titles:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1oyngcr15cye6018af6f31xewaly].[none:Club:nk]' value='21' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1oyngcr15cye6018af6f31xewaly].[none:Club:nk]' value='240' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1oyngcr15cye6018af6f31xewaly].[io:Top N Clubs By Wins:nk]' value='false' />
            <format attr='display' field='[federated.1oyngcr15cye6018af6f31xewaly].[none:Calculation_1031605839274131456:nk]' value='false' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-width' value='1' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#d4d4d4' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1oyngcr15cye6018af6f31xewaly].[io:Top N Clubs By Wins:nk]' />
              <text column='[federated.1oyngcr15cye6018af6f31xewaly].[sum:Titles:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='font-size' value='8' />
                <format attr='color' value='#ffffff' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1.4172928333282471' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1oyngcr15cye6018af6f31xewaly].[io:Top N Clubs By Wins:nk] / ([federated.1oyngcr15cye6018af6f31xewaly].[none:Calculation_1031605839274131456:nk] / [federated.1oyngcr15cye6018af6f31xewaly].[none:Club:nk]))</rows>
        <cols>[federated.1oyngcr15cye6018af6f31xewaly].[sum:Titles:qk]</cols>
      </table>
      <simple-id uuid='{FA55B200-465D-451A-91B9-EE1F942319E7}' />
    </worksheet>
    <worksheet name='Top 10 Coaches By Total Appearances'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Tableau Regular' fontsize='12'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CoachesAppearDetails+' name='federated.0mz60ro0p3znrf196kfgv1fxce04' />
          </datasources>
          <datasource-dependencies datasource='federated.0mz60ro0p3znrf196kfgv1fxce04'>
            <column datatype='integer' name='[Appearance]' role='measure' type='quantitative' />
            <column caption='My_Index' datatype='integer' name='[Calculation_960955620434489346]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INDEX()-1'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='My_Total' datatype='integer' name='[Calculation_960955620435001347]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_MAX(SUM([Appearance]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='My_Rank' datatype='integer' name='[Calculation_960955620435337221]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK_UNIQUE([Calculation_960955620435001347],&apos;asc&apos;)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Percentage' datatype='real' name='[Calculation_960955620435468294]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_960955620435001347]/[My_Total (copy)_960955620435288068]'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='X' datatype='real' name='[Calculation_960955620435558407]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COS(RADIANS([Calculation_960955620434489346]*[Calculation_960955620435468294]))*[Calculation_960955620435337221]'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Coach]' role='dimension' type='nominal' />
            <column caption='My_Total_Max' datatype='integer' name='[My_Total (copy)_960955620435288068]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_MAX(SUM([Appearance]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column aggregation='None' caption='Value (bin)' datatype='integer' name='[Value (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Value]' peg='0' size='1' />
            </column>
            <column datatype='integer' name='[Value]' role='measure' type='quantitative' />
            <column caption='Y' datatype='real' name='[X (copy)_960955620435722248]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SIN(RADIANS([Calculation_960955620434489346]*[Calculation_960955620435468294]))*[Calculation_960955620435337221]'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column-instance column='[Coach]' derivation='None' name='[none:Coach:nk]' pivot='key' type='nominal' />
            <column-instance column='[Value (bin)]' derivation='None' name='[none:Value (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Appearance]' derivation='Sum' name='[sum:Appearance:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_960955620435558407]' derivation='User' name='[usr:Calculation_960955620435558407:qk:14]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[federated.0mz60ro0p3znrf196kfgv1fxce04].[Calculation_960955620434489346]' ordering-field='[federated.0mz60ro0p3znrf196kfgv1fxce04].[Value (bin)]' ordering-type='Field' />
              <table-calc field='[federated.0mz60ro0p3znrf196kfgv1fxce04].[Calculation_960955620435001347]' ordering-field='[federated.0mz60ro0p3znrf196kfgv1fxce04].[Value (bin)]' ordering-type='Field' />
              <table-calc field='[federated.0mz60ro0p3znrf196kfgv1fxce04].[Calculation_960955620435468294]' ordering-type='Rows' />
              <table-calc field='[federated.0mz60ro0p3znrf196kfgv1fxce04].[Calculation_960955620435337221]' ordering-field='[federated.0mz60ro0p3znrf196kfgv1fxce04].[Coach]' ordering-type='Field' />
              <table-calc field='[federated.0mz60ro0p3znrf196kfgv1fxce04].[My_Total (copy)_960955620435288068]' ordering-type='Field'>
                <order field='[federated.0mz60ro0p3znrf196kfgv1fxce04].[Coach]' />
                <order field='[federated.0mz60ro0p3znrf196kfgv1fxce04].[Value (bin)]' />
              </table-calc>
            </column-instance>
            <column-instance column='[X (copy)_960955620435722248]' derivation='User' name='[usr:X (copy)_960955620435722248:qk:14]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[federated.0mz60ro0p3znrf196kfgv1fxce04].[Calculation_960955620434489346]' ordering-field='[federated.0mz60ro0p3znrf196kfgv1fxce04].[Value (bin)]' ordering-type='Field' />
              <table-calc field='[federated.0mz60ro0p3znrf196kfgv1fxce04].[Calculation_960955620435468294]' ordering-type='Rows' />
              <table-calc field='[federated.0mz60ro0p3znrf196kfgv1fxce04].[Calculation_960955620435001347]' ordering-field='[federated.0mz60ro0p3znrf196kfgv1fxce04].[Value (bin)]' ordering-type='Field' />
              <table-calc field='[federated.0mz60ro0p3znrf196kfgv1fxce04].[My_Total (copy)_960955620435288068]' ordering-type='Field'>
                <order field='[federated.0mz60ro0p3znrf196kfgv1fxce04].[Coach]' />
                <order field='[federated.0mz60ro0p3znrf196kfgv1fxce04].[Value (bin)]' />
              </table-calc>
              <table-calc field='[federated.0mz60ro0p3znrf196kfgv1fxce04].[Calculation_960955620435337221]' ordering-field='[federated.0mz60ro0p3znrf196kfgv1fxce04].[Coach]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0mz60ro0p3znrf196kfgv1fxce04].[none:Coach:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Appearance])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Coach:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0mz60ro0p3znrf196kfgv1fxce04].[none:Coach:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0mz60ro0p3znrf196kfgv1fxce04].[usr:Calculation_960955620435558407:qk:14]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.0mz60ro0p3znrf196kfgv1fxce04].[usr:X (copy)_960955620435722248:qk:14]' scope='cols' value='false' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
            <format attr='border-color' value='#d4d4d4' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0mz60ro0p3znrf196kfgv1fxce04].[none:Coach:nk]' />
              <text column='[federated.0mz60ro0p3znrf196kfgv1fxce04].[none:Coach:nk]' />
              <text column='[federated.0mz60ro0p3znrf196kfgv1fxce04].[sum:Appearance:qk]' />
              <path column='[federated.0mz60ro0p3znrf196kfgv1fxce04].[none:Value (bin):ok]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.0mz60ro0p3znrf196kfgv1fxce04].[none:Coach:nk]</run>
                <run>&gt;    &lt;</run>
                <run>[federated.0mz60ro0p3znrf196kfgv1fxce04].[sum:Appearance:qk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-labels-line-last' value='false' />
                <format attr='size' value='2.8176796436309814' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0mz60ro0p3znrf196kfgv1fxce04].[usr:Calculation_960955620435558407:qk:14]</rows>
        <cols>[federated.0mz60ro0p3znrf196kfgv1fxce04].[usr:X (copy)_960955620435722248:qk:14]</cols>
        <show-full-range>
          <column>[federated.0mz60ro0p3znrf196kfgv1fxce04].[Value (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{E2125AAC-D105-4DC0-9FB9-C10AE234CFE8}' />
    </worksheet>
    <worksheet name='Top 10 Players By Goals'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Regular' fontsize='12'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='PlayerGoalTotals' name='federated.13wf8gd18l5glu0ztlax60gs60mt' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='TopN' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='10'>
              <calculation class='tableau' formula='10' />
              <range granularity='5' max='20' min='5' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.13wf8gd18l5glu0ztlax60gs60mt'>
            <column datatype='integer' name='[Goals]' role='measure' type='quantitative' />
            <column datatype='string' name='[Player]' role='dimension' type='nominal' />
            <column caption='Subset Labels (copy)' datatype='string' name='[Subset Labels (copy)_1031605839355674628]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Player Set]&#13;&#10;THEN &quot;Top &quot; + str([Parameters].[Parameter 1]) + &quot; Players&quot;&#13;&#10;ELSE &quot;Others&quot;&#13;&#10;END' />
            </column>
            <column-instance column='[Player Set]' derivation='InOut' name='[io:Player Set:nk]' pivot='key' type='nominal' />
            <column-instance column='[Player]' derivation='None' name='[none:Player:nk]' pivot='key' type='nominal' />
            <column-instance column='[Subset Labels (copy)_1031605839355674628]' derivation='None' name='[none:Subset Labels (copy)_1031605839355674628:nk]' pivot='key' type='nominal' />
            <column-instance column='[Goals]' derivation='Sum' name='[sum:Goals:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13wf8gd18l5glu0ztlax60gs60mt].[none:Player:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Goals])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Player:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.13wf8gd18l5glu0ztlax60gs60mt].[sum:Goals:qk]' included-values='in-range'>
            <min>12</min>
            <max>140</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.13wf8gd18l5glu0ztlax60gs60mt].[none:Player:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.13wf8gd18l5glu0ztlax60gs60mt].[sum:Goals:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.13wf8gd18l5glu0ztlax60gs60mt].[sum:Goals:qk]</column>
            <column>[federated.13wf8gd18l5glu0ztlax60gs60mt].[none:Player:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.13wf8gd18l5glu0ztlax60gs60mt].[sum:Goals:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.13wf8gd18l5glu0ztlax60gs60mt].[io:Player Set:nk]' value='false' />
            <format attr='display' field='[federated.13wf8gd18l5glu0ztlax60gs60mt].[none:Subset Labels (copy)_1031605839355674628:nk]' value='false' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-width' value='1' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#d4d4d4' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.13wf8gd18l5glu0ztlax60gs60mt].[io:Player Set:nk]' />
              <text column='[federated.13wf8gd18l5glu0ztlax60gs60mt].[sum:Goals:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='font-size' value='8' />
                <format attr='color' value='#ffffff' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-color' value='#053661' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.13wf8gd18l5glu0ztlax60gs60mt].[io:Player Set:nk] / ([federated.13wf8gd18l5glu0ztlax60gs60mt].[none:Subset Labels (copy)_1031605839355674628:nk] / [federated.13wf8gd18l5glu0ztlax60gs60mt].[none:Player:nk]))</rows>
        <cols>[federated.13wf8gd18l5glu0ztlax60gs60mt].[sum:Goals:qk]</cols>
      </table>
      <simple-id uuid='{D0963680-A915-41EF-AA8B-48C88C839AC0}' />
    </worksheet>
    <worksheet name='Top 10 Players By Total Appearances'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Tableau Regular' fontsize='12'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='PlayerAppearDetails+' name='federated.166k8561fjgdj21gctff218zft14' />
          </datasources>
          <datasource-dependencies datasource='federated.166k8561fjgdj21gctff218zft14'>
            <column datatype='integer' name='[Appearances]' role='measure' type='quantitative' />
            <column caption='My_index' datatype='integer' name='[Calculation_1031605839360077831]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INDEX()-1'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='My_Total' datatype='integer' name='[Calculation_1031605839360241672]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_MAX(SUM([Appearances]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='My_Rank' datatype='integer' name='[Calculation_1031605839360409609]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK_UNIQUE([Calculation_1031605839360241672],&apos;asc&apos;)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Percentage' datatype='real' name='[Calculation_1031605839360770059]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1031605839360241672]/[My_Total (copy)_1031605839360700426]'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='X' datatype='real' name='[Calculation_1031605839360876556]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COS(RADIANS([Calculation_1031605839360077831]*[Calculation_1031605839360770059]))*[Calculation_1031605839360409609]'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Y' datatype='real' name='[Calculation_1031605839361024013]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SIN(RADIANS([Calculation_1031605839360077831]*[Calculation_1031605839360770059]))*[Calculation_1031605839360409609]'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='My_Total_Max' datatype='integer' name='[My_Total (copy)_1031605839360700426]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_MAX(SUM([Appearances]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Player]' role='dimension' type='nominal' />
            <column aggregation='None' caption='Path' datatype='integer' name='[Value (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Value]' peg='0' size='1' />
            </column>
            <column datatype='integer' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Player]' derivation='None' name='[none:Player:nk]' pivot='key' type='nominal' />
            <column-instance column='[Value (bin)]' derivation='None' name='[none:Value (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Appearances]' derivation='Sum' name='[sum:Appearances:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1031605839360876556]' derivation='User' name='[usr:Calculation_1031605839360876556:qk:14]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[federated.166k8561fjgdj21gctff218zft14].[Calculation_1031605839360077831]' ordering-field='[federated.166k8561fjgdj21gctff218zft14].[Value (bin)]' ordering-type='Field' />
              <table-calc field='[federated.166k8561fjgdj21gctff218zft14].[Calculation_1031605839360770059]' ordering-type='Rows' />
              <table-calc field='[federated.166k8561fjgdj21gctff218zft14].[Calculation_1031605839360241672]' ordering-field='[federated.166k8561fjgdj21gctff218zft14].[Value (bin)]' ordering-type='Field' />
              <table-calc field='[federated.166k8561fjgdj21gctff218zft14].[My_Total (copy)_1031605839360700426]' ordering-type='Field'>
                <order field='[federated.166k8561fjgdj21gctff218zft14].[Value (bin)]' />
                <order field='[federated.166k8561fjgdj21gctff218zft14].[Player]' />
              </table-calc>
              <table-calc field='[federated.166k8561fjgdj21gctff218zft14].[Calculation_1031605839360409609]' ordering-field='[federated.166k8561fjgdj21gctff218zft14].[Player]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_1031605839361024013]' derivation='User' name='[usr:Calculation_1031605839361024013:qk:16]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[federated.166k8561fjgdj21gctff218zft14].[Calculation_1031605839360077831]' ordering-field='[federated.166k8561fjgdj21gctff218zft14].[Value (bin)]' ordering-type='Field' />
              <table-calc field='[federated.166k8561fjgdj21gctff218zft14].[Calculation_1031605839360241672]' ordering-field='[federated.166k8561fjgdj21gctff218zft14].[Value (bin)]' ordering-type='Field' />
              <table-calc field='[federated.166k8561fjgdj21gctff218zft14].[Calculation_1031605839360770059]' ordering-type='Rows' />
              <table-calc field='[federated.166k8561fjgdj21gctff218zft14].[My_Total (copy)_1031605839360700426]' ordering-type='Field'>
                <order field='[federated.166k8561fjgdj21gctff218zft14].[Value (bin)]' />
                <order field='[federated.166k8561fjgdj21gctff218zft14].[Player]' />
              </table-calc>
              <table-calc field='[federated.166k8561fjgdj21gctff218zft14].[Calculation_1031605839360409609]' ordering-field='[federated.166k8561fjgdj21gctff218zft14].[Player]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.166k8561fjgdj21gctff218zft14].[none:Player:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Appearances])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Player:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.166k8561fjgdj21gctff218zft14].[none:Player:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.166k8561fjgdj21gctff218zft14].[usr:Calculation_1031605839361024013:qk:16]' scope='cols' value='false' />
            <format attr='display' class='0' field='[federated.166k8561fjgdj21gctff218zft14].[usr:Calculation_1031605839360876556:qk:14]' scope='rows' value='false' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='tick-color' scope='rows' value='#00000000' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-width' value='1' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#d4d4d4' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.166k8561fjgdj21gctff218zft14].[none:Player:nk]' />
              <text column='[federated.166k8561fjgdj21gctff218zft14].[none:Player:nk]' />
              <text column='[federated.166k8561fjgdj21gctff218zft14].[sum:Appearances:qk]' />
              <path column='[federated.166k8561fjgdj21gctff218zft14].[none:Value (bin):ok]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.166k8561fjgdj21gctff218zft14].[none:Player:nk]</run>
                <run>&gt;    &lt;</run>
                <run>[federated.166k8561fjgdj21gctff218zft14].[sum:Appearances:qk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='auto' />
                <format attr='vertical-align' value='auto' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='font-size' value='8' />
                <format attr='color' value='#000000' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-labels-line-last' value='false' />
                <format attr='size' value='2.9060773849487305' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.166k8561fjgdj21gctff218zft14].[usr:Calculation_1031605839360876556:qk:14]</rows>
        <cols>[federated.166k8561fjgdj21gctff218zft14].[usr:Calculation_1031605839361024013:qk:16]</cols>
        <show-full-range>
          <column>[federated.166k8561fjgdj21gctff218zft14].[Value (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{1B80D775-0565-4ABE-BB96-A7446159F7B5}' />
    </worksheet>
    <worksheet name='Top Clubs By Played Games'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Tableau Regular' fontsize='12'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AllTimeRankingByClub' name='federated.1oyngcr15cye6018af6f31xewaly' />
          </datasources>
          <datasource-dependencies datasource='federated.1oyngcr15cye6018af6f31xewaly'>
            <column caption='Zero Axis' datatype='integer' name='[Calculation_1031605839345786881]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='0' />
            </column>
            <column datatype='string' name='[Club]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Loss]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Played]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Win]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1031605839345786881]' derivation='None' name='[none:Calculation_1031605839345786881:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Club]' derivation='None' name='[none:Club:nk]' pivot='key' type='nominal' />
            <column-instance column='[Loss]' derivation='Sum' name='[sum:Loss:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Played]' derivation='Sum' name='[sum:Played:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Win]' derivation='Sum' name='[sum:Win:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1oyngcr15cye6018af6f31xewaly].[sum:Played:qk]' included-values='in-range'>
            <min>200</min>
            <max>476</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1oyngcr15cye6018af6f31xewaly].[none:Club:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1oyngcr15cye6018af6f31xewaly].[sum:Win:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1oyngcr15cye6018af6f31xewaly].[sum:Played:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1oyngcr15cye6018af6f31xewaly].[sum:Loss:qk]' field-type='quantitative' reverse='true' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.1oyngcr15cye6018af6f31xewaly].[none:Calculation_1031605839345786881:qk]' scope='cols' value='Club' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1oyngcr15cye6018af6f31xewaly].[none:Calculation_1031605839345786881:qk]' field-type='quantitative' major-origin='0' major-show='false' major-spacing='1' scope='cols' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1oyngcr15cye6018af6f31xewaly].[none:Club:nk]' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-width' value='1' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#c0c0c0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1oyngcr15cye6018af6f31xewaly].[sum:Win:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#053661' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1oyngcr15cye6018af6f31xewaly].[sum:Loss:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#053661' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1oyngcr15cye6018af6f31xewaly].[none:Calculation_1031605839345786881:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <text column='[federated.1oyngcr15cye6018af6f31xewaly].[none:Club:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1oyngcr15cye6018af6f31xewaly].[none:Club:nk]</rows>
        <cols>([federated.1oyngcr15cye6018af6f31xewaly].[sum:Loss:qk] + ([federated.1oyngcr15cye6018af6f31xewaly].[none:Calculation_1031605839345786881:qk] + [federated.1oyngcr15cye6018af6f31xewaly].[sum:Win:qk]))</cols>
      </table>
      <simple-id uuid='{A3A5BA19-DD63-4E2F-837C-4D4C6D330614}' />
    </worksheet>
    <worksheet name='Top Clubs By Scored Goals'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Tableau Regular' fontsize='12'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AllTimeRankingByClub' name='federated.1oyngcr15cye6018af6f31xewaly' />
          </datasources>
          <datasource-dependencies datasource='federated.1oyngcr15cye6018af6f31xewaly'>
            <column caption='Zero Axis' datatype='integer' name='[Calculation_1031605839345786881]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='0' />
            </column>
            <column datatype='string' name='[Club]' role='dimension' type='nominal' />
            <column datatype='real' name='[Goals Against]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Goals For]' role='measure' type='quantitative' />
            <column-instance column='[Club]' derivation='None' name='[none:Club:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1031605839345786881]' derivation='Sum' name='[sum:Calculation_1031605839345786881:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Goals Against]' derivation='Sum' name='[sum:Goals Against:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Goals For]' derivation='Sum' name='[sum:Goals For:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1oyngcr15cye6018af6f31xewaly].[sum:Goals For:qk]' included-values='in-range'>
            <min>300</min>
            <max>1047</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1oyngcr15cye6018af6f31xewaly].[none:Club:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1oyngcr15cye6018af6f31xewaly].[sum:Goals For:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1oyngcr15cye6018af6f31xewaly].[sum:Goals For:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1oyngcr15cye6018af6f31xewaly].[sum:Calculation_1031605839345786881:qk]' scope='cols' value='Club' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1oyngcr15cye6018af6f31xewaly].[sum:Calculation_1031605839345786881:qk]' field-type='quantitative' major-origin='0' major-show='false' major-spacing='1' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1oyngcr15cye6018af6f31xewaly].[sum:Goals Against:qk]' field-type='quantitative' reverse='true' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1oyngcr15cye6018af6f31xewaly].[sum:Goals Against:qk]' value='N' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1oyngcr15cye6018af6f31xewaly].[none:Club:nk]' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-width' value='1' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#c0c0c0' />
          </style-rule>
        </style>
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1oyngcr15cye6018af6f31xewaly].[sum:Goals Against:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <text column='[federated.1oyngcr15cye6018af6f31xewaly].[sum:Goals Against:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#053661' />
              </style-rule>
            </style>
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1oyngcr15cye6018af6f31xewaly].[sum:Calculation_1031605839345786881:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <text column='[federated.1oyngcr15cye6018af6f31xewaly].[none:Club:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1oyngcr15cye6018af6f31xewaly].[sum:Goals For:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <text column='[federated.1oyngcr15cye6018af6f31xewaly].[sum:Goals For:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#053661' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1oyngcr15cye6018af6f31xewaly].[none:Club:nk]</rows>
        <cols>([federated.1oyngcr15cye6018af6f31xewaly].[sum:Goals Against:qk] + ([federated.1oyngcr15cye6018af6f31xewaly].[sum:Calculation_1031605839345786881:qk] + [federated.1oyngcr15cye6018af6f31xewaly].[sum:Goals For:qk]))</cols>
      </table>
      <simple-id uuid='{B45CE160-E0AD-4A1C-BD05-921BEBDC7493}' />
    </worksheet>
    <worksheet name='Total Titles By Countries'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Tableau Regular' fontsize='12'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AllTimeRankingByClub' name='federated.1oyngcr15cye6018af6f31xewaly' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1oyngcr15cye6018af6f31xewaly'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;ENG&quot;' value='&quot;United Kingdom&quot;' />
                <semantic-value key='&quot;POR&quot;' value='&quot;Portugal&quot;' />
                <semantic-value key='&quot;SCO&quot;' value='&quot;United Kingdom&quot;' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[Titles]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Titles]' derivation='Sum' name='[sum:Titles:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1oyngcr15cye6018af6f31xewaly].[sum:Titles:qk]' included-values='in-range'>
            <min>1</min>
            <max>19</max>
          </filter>
          <slices>
            <column>[federated.1oyngcr15cye6018af6f31xewaly].[sum:Titles:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1oyngcr15cye6018af6f31xewaly].[Longitude (generated)]' field-type='quantitative' max='3322929.395448762' min='-2132004.1608690275' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1oyngcr15cye6018af6f31xewaly].[Latitude (generated)]' field-type='quantitative' max='7441674.050544735' min='4870740.0980238207' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' value='1' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1oyngcr15cye6018af6f31xewaly].[sum:Titles:qk]' num-steps='5' reverse='true' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#053661</color>
                <color>#184975</color>
                <color>#326089</color>
                <color>#527a9d</color>
                <color>#7996b1</color>
                <color>#a5b6c5</color>
                <color>#d9d9d9</color>
                <color>#d6ddcf</color>
                <color>#d3e1c4</color>
                <color>#d1e5b9</color>
                <color>#cde9ae</color>
                <color>#caeda2</color>
                <color>#c7f296</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
            <format attr='border-style' data-class='subtotal' value='solid' />
            <format attr='border-width' data-class='subtotal' value='1' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
            <format attr='border-color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='light' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1oyngcr15cye6018af6f31xewaly].[sum:Titles:qk]' />
              <text column='[federated.1oyngcr15cye6018af6f31xewaly].[none:Country:nk]' />
              <geometry column='[federated.1oyngcr15cye6018af6f31xewaly].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='font-size' value='8' />
                <format attr='color' value='#000000' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1oyngcr15cye6018af6f31xewaly].[Latitude (generated)]</rows>
        <cols>[federated.1oyngcr15cye6018af6f31xewaly].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{47172C21-51A4-46D1-8E85-5F8255A54FCB}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='UEFA ANALYTICS'>
      <style />
      <size maxheight='968' maxwidth='1566' minheight='968' minwidth='1566' preset-index='0' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98348' id='13' param='horz' type-v2='layout-flow' w='98978' x='511' y='826'>
            <zone h='98348' id='5' param='vert' type-v2='layout-flow' w='98978' x='511' y='826'>
              <zone h='5991' id='7' type-v2='title' w='98978' x='511' y='826'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='92357' id='6' type-v2='layout-basic' w='98978' x='511' y='6817' />
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='47049' id='21' name='Top 10 Players By Total Appearances' w='31318' x='665' y='5646' />
        <zone h='46792' id='22' name='Top 10 Coaches By Total Appearances' w='30955' x='68561' y='5389' />
        <zone h='43285' id='23' name='Top Clubs By Scored Goals' w='36397' x='907' y='56116' />
        <zone h='43884' id='24' name='Top Clubs By Played Games' w='34462' x='65054' y='55860' />
        <zone h='22669' id='25' name='Top 10 Players By Goals' w='31802' x='34643' y='5304' />
        <zone h='25321' id='29' name='All Time Winners Rankings By Club' w='31560' x='34885' y='29085' />
        <zone h='43713' id='31' name='Total Titles By Countries' w='27690' x='37304' y='56031' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='2000' minheight='2000' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='39' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98348' id='38' param='vert' type-v2='layout-flow' w='98978' x='511' y='826'>
                <zone h='5991' id='7' type-v2='title' w='98978' x='511' y='826'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='220' h='22669' id='25' is-fixed='true' name='Top 10 Players By Goals' w='31802' x='34643' y='5304'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46792' id='22' is-fixed='true' name='Top 10 Coaches By Total Appearances' w='30955' x='68561' y='5389'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='47049' id='21' is-fixed='true' name='Top 10 Players By Total Appearances' w='31318' x='665' y='5646'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='245' h='25321' id='29' is-fixed='true' name='All Time Winners Rankings By Club' w='31560' x='34885' y='29085'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43884' id='24' is-fixed='true' name='Top Clubs By Played Games' w='34462' x='65054' y='55860'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43713' id='31' is-fixed='true' name='Total Titles By Countries' w='27690' x='37304' y='56031'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43285' id='23' is-fixed='true' name='Top Clubs By Scored Goals' w='36397' x='907' y='56116'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{FD207373-1627-415C-946F-2A3CD0D91E01}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='137'>
    <window class='worksheet' name='Total Titles By Countries'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1oyngcr15cye6018af6f31xewaly].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{60D3C054-08B5-4D52-8341-A227B53D2A27}' />
    </window>
    <window class='worksheet' name='All Time Winners Rankings By Club'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='1' param='[federated.1oyngcr15cye6018af6f31xewaly].[io:Top N Clubs By Wins:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1oyngcr15cye6018af6f31xewaly].[io:Top N Clubs By Wins:nk]</field>
            <field>[federated.1oyngcr15cye6018af6f31xewaly].[none:Calculation_1031605839274131456:nk]</field>
            <field>[federated.1oyngcr15cye6018af6f31xewaly].[none:Club:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{37AFEFE1-1865-4820-938B-B265FCA0F598}' />
    </window>
    <window class='worksheet' name='Top Clubs By Played Games'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1oyngcr15cye6018af6f31xewaly].[io:Top N Clubs By Wins:nk]</field>
            <field>[federated.1oyngcr15cye6018af6f31xewaly].[none:Calculation_1031605839274131456:nk]</field>
            <field>[federated.1oyngcr15cye6018af6f31xewaly].[none:Club:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8BA6154A-DFF0-448C-BD07-32B431A9C616}' />
    </window>
    <window class='worksheet' name='Top Clubs By Scored Goals'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1oyngcr15cye6018af6f31xewaly].[io:Top N Clubs By Wins:nk]</field>
            <field>[federated.1oyngcr15cye6018af6f31xewaly].[none:Calculation_1031605839274131456:nk]</field>
            <field>[federated.1oyngcr15cye6018af6f31xewaly].[none:Club:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FE3ED8FF-AC3D-440A-B4F4-39955DAE8A4B}' />
    </window>
    <window class='worksheet' name='Top 10 Players By Goals'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.13wf8gd18l5glu0ztlax60gs60mt].[sum:Goals:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='1' param='[federated.13wf8gd18l5glu0ztlax60gs60mt].[io:Player Set:nk]' type='color' />
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.13wf8gd18l5glu0ztlax60gs60mt].[io:Player Set:nk]</field>
            <field>[federated.13wf8gd18l5glu0ztlax60gs60mt].[none:Player:nk]</field>
            <field>[federated.13wf8gd18l5glu0ztlax60gs60mt].[none:Subset Labels (copy)_1031605839355674628:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{88EA415A-6628-4111-BE6A-D171548E8935}' />
    </window>
    <window class='worksheet' name='Top 10 Players By Total Appearances'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0cp741j04c79v6114rsyc0des8ng].[io:Player Set:nk]</field>
            <field>[federated.0cp741j04c79v6114rsyc0des8ng].[none:Player:nk]</field>
            <field>[federated.166k8561fjgdj21gctff218zft14].[none:Player:nk]</field>
            <field>[federated.166k8561fjgdj21gctff218zft14].[none:Value (bin):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{20C7DC6D-67D6-434B-A19F-8A08CCFE5929}' />
    </window>
    <window class='worksheet' name='Top 10 Coaches By Total Appearances'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0mz60ro0p3znrf196kfgv1fxce04].[none:Coach:nk]</field>
            <field>[federated.0mz60ro0p3znrf196kfgv1fxce04].[none:Value (bin):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E6F3289E-DF8F-45D6-B2BB-C8D859D6F3C8}' />
    </window>
    <window class='dashboard' maximized='true' name='UEFA ANALYTICS'>
      <viewpoints>
        <viewpoint name='All Time Winners Rankings By Club' />
        <viewpoint name='Top 10 Coaches By Total Appearances'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Top 10 Players By Goals' />
        <viewpoint name='Top 10 Players By Total Appearances'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Top Clubs By Played Games'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Top Clubs By Scored Goals'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total Titles By Countries'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='7' />
      <simple-id uuid='{B5501D68-59C0-4A8C-BDC8-24F1683C635D}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='All Time Winners Rankings By Club' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAcjUlEQVR4nO3dWYxkWXrQ8f+9se8RGbnvW2VWVlVWVXfXdM/SM2MYMzOW7QELIYEsWwYZ
      zBNCSBYPNkJg8QACyRI8GYMfsJCR4AFkGMEwdms8C9M91d2VWblvkZGRse/7du/lIbKyqjqy
      KmYyoiqy8p7fQ1Zk3HtOfHErv4hz7j3nHknTNA1B0Cm53wEIQj+JBOigVCr1OwThFRIJ0EGj
      0eh3CMIrJBJA0DWRAIKuiQQQdE0kgKBrxicPSqWS6PBdoFwud12HpmlIknTp8qqqIsvdfVZ1
      W0e35bs9Br2I4aLy5wngcDguH9k15/V6L11W0zRUVcVgMFy6jmazidFo7LzjS2JQFKWrOrqN
      odlsYjAYukqCXsTw2fKSuBL8cvFEkkS+dunyGmcJIF8+ARSlicFw+f94aCVAN3V0G4OiKsiy
      jMTlE6DrGC4o381R1YVAOMn7f+9f9TsM4RURnWBB10QCCLomEkDQtbYEqJULBINB0rkiL+4d
      KyTiKQDqlSK5Yvm8bK5YubBEPJ44f6w2G5QrTzuW8cTZNk0jn00RiSVRGjVOgkFOQlHUn/19
      CcI5n8eJ+ewv3ePx4LU97fq2JUB0P4DB7Sa4tU6hrpKMhgiG42iayvHhLsenMTStSfwsAdLB
      Ax5uHaABO48/ZfvohHI+zcbmFpV6k2a9ys7WJgeBEKVCjlQ8Sr5Uptpo0qxX2N7c5OA4BEA+
      HmT/NINB0ijmYuSqEm63o4vzBoLeWV1ufvUXv8CI1YRssvCNr3+Zv7LkP99+QRNIo1arockG
      muUUJ8kqUiFCLF/D6nCTCO6QrT7z3SAZ8NoMFKo1VNmMSQYViQGPnfXH22xtbjK9sITdYiB0
      uEUwUcIu14mlC2xubDJ7YwmbuZWR+6Ek928vMjw8hAGNWOSUUCQhEkC4tGohzw+2wwD80s89
      IHQax+91nm+/sA9QziUpyzYsao1ELEK6olJLR4mlC9isZprN5xslo6ND7H7yEN/EHACHB4dI
      Bguy1ESTjFjNRmTZgNHi4ObSPPKTv2jZhNVkRD57wmuVSRbrrW2SgfkbK9xenu/l8RB0ZsDv
      592VGT6/OsfHj7ZJVZTntrddB3AO+BmZHKccDZJTnEyPeqgrEt6BAbJHRzQwYzUZ8PrcANg8
      PgzeQZL2MJN+F2gachUSyRRut5cBm8Ta2mNMFjsujxmDLCEZrXhdKgaTm0frjzFZW1eh51ZW
      2VxfJyJZWJgbxWUwv4ZDJFxnmXSaP/ov/xsNaDQViKfYe6ZJIa4Ed/Dho21xIewaE6dBBV0T
      CSDomkgAQddEH6CDbDaLx+Ppqo5ux7G3RnJefjRpL+rod/lXFYMYDfpT6GYM+5PPl24ng7zp
      MfSqjl6XF00gQddEAgi6JhJA0DXRB+ggFEvzt373Dy9dXjv72c1UwF5MKO+2jq7Lo0FXR6H7
      GP76197hN3/lLz33nEiADsrVOt/9aLPfYQg9cH9pqu050QQSdE0kgKBrPUsATVVQxTU14Q1z
      4YSYnUcfEohmAI3g/hafPlojnMgAsP7wh5wmcqCp/Oi73yFZqpLOZCiEtwnlxOTFN83C3Ay/
      8P59fv3n7/U7lL5o6wRrqkJDtlKNh1EGzCRKKm/fu/u0926yko5HGXZqlKsKdUWhGEsyejbJ
      5uRwl0Qmy/jcbQKbH2KzO3GPzjM37v/sSwlXwMHRMTVNZlLK9juUvmj7BijGA4TTFU5Dp9Qb
      TQxG03OnriSDGbPUJHQSZnxqEoD6k3uKairlSg1Z0kgmUji9g9y9vUxRrLJypX1uzsuHR5l+
      h9EXbQlwHC/zta++x889uMFxWkGqZtne3iGSeHqAJodc7EbLeKyfKa42yBRKmE2m86fEfN4r
      zmRjY/tAt3feaGsCrdy+jQGwD81yQ9WQJx5QbzQwnv1Rr9xcwSDLfO2LE8gyIMmM3FpGlsAp
      yYy/8w4aEgaDjKZNgCxza8H52ZcRropGhd3Ixbey0YO2BDgfLipJGAytz2+LxdK23Wg0PFuo
      VQSQn/n0P9/cg1GEgvAqiOsAgq6JBBB0TYwF6mBowM2//od/89LlNUDTVGSpf6uz9KKOXpSX
      ZLmrkyLdxnDRWCAxJbKDbDYrVojpQQxXdYUY0QQSdE0kgKBrIgEEXRMJIOiaOAvUwe5xlPe/
      8Y/6HYYArP3J73FzbqKndYpvAEHXRAIIuiYSQNC1tgQo5/Kcje4nk0737IVOT08BaFTyrK2t
      s7FzgKZpREMB9o9OXrIgn9Atk9EghqW/QFsnOBEMMrB6BxOtS8/JeAzf4DCZVBKXy8b+foDR
      qTm0RoVKIYvd6SSRKWA021iYHiNwsIdicrIwM07wcJ8aFhbnp8lkM0xMTFDLRnFNLDHntxAL
      bJOTB5gZdqAC3d06VbjIF965g9eksbV7RCBd7nc4V85LzwJFo1F8NgMJs5NYOIqk1FhavcfW
      xiZao4R/fBFKUSz+ZZTTLY6DZTTnGI7SMVs7FYwOL14ty0k8f16nhsrBzgbVIR/1XImVd25i
      Fh9Pr4jE/YVxTqJJFif9IgEu0LEPMDYzw8nWJ9h9o9QqBbY2NzFaHBhtbqYnhpEkqTUDTJIA
      FdkgI8syiqpikA3IsoymPm3gSMgsLN9m5cYcPqeJeKaI0myKJtAroRFOZdk7CuN0iUlJF2lL
      AM+Qj4P1dU6iSYaHh5GMdvwDg0xPDnH3/lsYJBm328XIyEirXampHOxsYvAOMz21SCMdJKu5
      uLOyCKU4ybLM1KiH4eFhAMwuP76zhYonb9yiGg+ys3eE8tlAhJ740+99itFs4Nv/b6vfoVxJ
      XY8GLSaCNJzT+Gy9CulqEYvkXR3dXgi7aDRo11eCnUPT3VYhCH0jrgMIuiYSQNA1MSOsg3gi
      SSJfvXR5TQNVUzHofZG8s+mM3ZzxnhsfxG6zXrr8K+kDXHdmk5HbC5OXLi+mRD4t34spkb0m
      mkCCrokEEHRNJICga6IP0EEiU+D3/ujbl69AO1vcTe5igbmze+p0o9s6ui/f3TEA+O1f+yaj
      g76u6vgskQAdZPIl/u2ffKffYQjA3/1rX+l5AogmkKBrIgEEXRMJIOhaWx8gFTommMnjdHqZ
      nxxkY2Mbyepi9eYijUKch7sRLJLC4q27uKyX70KEgwfUZRezk8Mc7z9GckwwYNNQZCNmqx2b
      +YK6GyW2Qxluzl3+wpTejI6N8u7iCI839zhMiQkxn9X2V1bMFFhcXcUFbH76kLmV+zjNrS8K
      pZLDP7XMmHbKUSSDR02TyhWYWVginc4zO+YmlChSTEdpYmbl1ixbH+9iHRqmkY2AwYhnZJbp
      UR/pYhWlWUKbHCSeiGKre1DrKjOTI+wHIqjVFHVVxuryM2SHo3CC8dERQoF9KpkYM0u3iQe2
      qTQllm/d5PFPHmI0m5lbuYvPYX7dx/HK+vq7N4nHU9SaYsbFRdqaQJrWYGt9nYPjMBVFw2l5
      9vK1xuHuJhuHUYa8NjRAos5ptEg+HSMePkVSSkTyTZrFJKfJDMW6keW5STDZWL13m3wifv5a
      XpuRWCSEfbD1iV4oFJA0hXy+SEOTWV29S6WY4Tgc5969+4wMuBiemGVlaYrE0QHH8SKGZonA
      aQy7a5A7C6PEs2JBvqckaFT57kfbfPGdW/0O5kpqSwBJMrGyusrCzDgjHht7xxESqad3hxif
      mmVhdoRoKEoiX2XI70XSYG7EzfppickRP06bjYmZBQY9VgZ8A0gSZ0kk8exQkNGxMT5Z22Nq
      pHX78WajQSqZoFJXeLK8ngTYTDLJTIZCqYJEqy7ZbMfttDM8Mc3YoIez6oXnaPzFVphffn+V
      ze2DfgdzJbU1gUYX5s+fnFy4RTIeoa60BoyafVM4ihHKioO7d0bJpeI0ZTMLww6MmonhrBGD
      bYDb8wq5ioLT6mN2vvXVOz8/BxiYm29NoJmfncNss/GF9x7gdNiZn1XRmg5y5Sb374wgS63X
      XJifx2Y1cxo6xTk8ysKUG5NZZmrGy3jNQzJfZcjhxDJvxmiWmbaLe0s86+goyNFRsN9hXFlt
      CWCx25/+IkkMjoyf/yqbbMzPz5//7hscOXukEjjIc2eltc09MIT7bIvdbjz71372r+25371e
      z9nvABYcTwqel2/tNzk989zzVgNgHcDhebJfq95rOjNTeEV6dCVYZnZhoTdVCcJrJK4DCLom
      xgJ14HHa+Nvf+nJXdWia1tVEkF4MJOu2jq7Ld3kMANyO3jdwxZTIDsQieb2JQSySJwhXkEgA
      QddEAgi6JjrBHTSbCseR5KXLa1prNpVs0PdtUYwGmfGh3k5m6QWRAB0cnibEvUF74Aur83zw
      73+n32G0EU0gQddEAgi6JhJA0LW2BGhUy8RiMVKZPJqmUchlyOSLAKjNOrFYjGQ6y892/Uwh
      lcz0KmbhGQM+L4tTw9iMYiz4ZbQlQHh3n9aUEo14cJ9AJE2p2EqAejrAcbpOOX7E9kmGdDzS
      WuFRg2KxQDQcQWnW2N/bpVRrkI6HicTTQJNoNIFSr7K/t0etqVIsFggHj0jnSjTrFfZ2dsiX
      aq/1zV8HX31rqd8hvNHaZ4ShkIzHyeZLhJI57iwvMDk+er49k0oQThXxe20gGzErGXaDaX7y
      ww+oy2Y21tcZGZ+knotynKhQSgRJlRqAxvr6OqPjo6w9Wudw5zFm9yDHgQOajSaeAR8bjx+/
      xrd+PYTSRR6sLjHvFwPBL+OlM8LMElSem0sqMb98m7u35wkfn3IYOEaRJBqVKoPjs0yP+kE2
      4rTbkdUG6VScQk1D1tRWaYMZh92JQVYxWp0MeFwYDTKhYIBisYKqiHmrPxsZi0ElX21g7HKw
      nF61XQdweDznTy6vLLP5eA3Z6uTuyg1ki5P47hZFucnU4grxYJFiRcHjsyGprZkpU6ODPFpb
      Y2pmhlFvHkUyYTGZcXvcWGQra48eMTQ2jdQoIQEejwebQSWcymN3ul7jW78OVH6ycYRZhnxZ
      NB8vQ4wG7UAsktcbTy6EidGggnCFiAQQdE0kgKBrog/QQTqTwWS5/CnGXswIU5pNDF20fXtR
      R9cxaCpOu+3K9QHEaNAOZEnCZb/8yoRXZ0qkse9TIq8i0QQSdE0kgKBrIgEEXRN9gA52g1H+
      8i/+dr/D6Lt/949/jd/41lf6HUbPiQToRIO6uLc+qqr2O4RXQjSBBF0TCSDomkgAQdfaE0DT
      +PgH32XjMAw0+N7//TPW1x+TK5Z4+OMfsba+RvJsGSK1luO//df/TkXRaJQyJHIVapUSmWwO
      VVOp1eqoSpOGaENf2szcHL//W9/sdxjXVlsnWFVrWHxTNAspNG0Ig9GIxWqhkY9hG57n1tzI
      +b6RcJQvfuktAscx5l0lIuUBsFYoFvKk8mWK8VMsNgsT8zcxGcXKLT8ri93J6pCRh4F0552F
      S2n7BkgFD0kVi8SjUcpNFafHz/TUFHabhWaz8XRHTSMSiRFPZIhHT86eVDgNnZLPFykWS0yP
      uAhm6risptf0dq4Xm9WCZrazujTNuNvS73CupbZvgEzDyJfffRulEOUolsfpdGK1WsEyhjn0
      iLW1FGNTC/idRjyjs9yYn+Zod5ua2lozUpZkJIMRs8VAtKTy9pyPWLbEqM/Rh7f3ZsumU/zP
      76f48foBybyY8fUqtCXA0lLrLgNG1yg3np2hKMncXH3ruX1vnC14N7d0g82PfoT/xhQTM++8
      umh1Kpkr9juEa6tHF8IM3Prc+72pShBeI3EaVNA1kQCCrokZYR3E4gnC6fKly2ucTYiR+3dv
      /l7UMT7kYcR/+bXSruoaYWIwXAcWs4m3bs503vEFrs6MsO4XybuORBNI0DWRAIKuiQQQdE30
      ATpIZAv8yz/+zuUr0LTWKuny5T9rNFXtqrwE/PO//yuXLn+diQToIJMr8W/+07f7HUZXJEkk
      wIuIJpCgayIBBF0TCSDoWlsCpE+P2QtFAQgHdjkKJzpW0ixnODh9+X61YoZY+uWjGk+CrXkF
      sdNTasqzdyFQSaczlDJxUoXqhWUTJztkKh1DvVKcHi+//P49vvH2fL9D0a22TnAhXSBJnsWJ
      USKRKEavRFQtEktkGJ1ZIhvZp67KOLzDuI11QrEMYyMDBPaPycVOWLq9Smhvg4pi4NbKIptr
      m9g8fqyNOJvhOp9/9z7hw10aspWVhQn294+weEe4MTNGPB5nanqKTDKO1ethbWMDg8HAjTtv
      UyzmiccDnFRsvHv/FoH9HSSzi9tL02xubpNLR7npX+7HMby0Yj7HhzsnfP3+bL9D0a0LzwL5
      nRYSyQhGxxAAkiQhG1SOA2HsZpnV1busPV6n0FS4d+8+SinJ+MwCE44G8ZMjgqkaY44mgUiS
      Sq2B32HHbxplzm7DWosTK8t4myFO0l7KqoXb02NtMahqA7d/hBkvHKfLNPJ5xkfGMJvHaKYD
      FFQbcjTAnlVicHqZIdcbOOVS0/C4nf2OQtcu7AMMj43w8KN1Zmdbq0OGIgkmxofPdpbOfkoY
      JJVcoUC5Wn9aodmO3WJicGyKYbeLheVlYqfHaAYT9XIRyezAZjIwOruIz2rA7x/gyfgok6yQ
      yRfJVmpYZfnsVZ4ymExUS0WMNhcWk4GphRt4bWaymTSZTLb3R+cVGxoe5uaYj2Lp8oPthO60
      jQatlkoYHQ4KmQwet4tyrYFWL5GvqnidLpBUHA4HpVIJm8XIcTDM6PgYGjJmg0pTM1IvZUjl
      a0xPjRM7DWJyDDDocxENBXEOjtEopijUYHLUT70JNqsZAE1pEAgc4xuZwG0zUa03sRqhqprQ
      mlXsdhunwWMGRqcoZaJUNTOTo0PEIyEwWhnwD2Hq8RfBdVgjTJKg9P0/6Pvt0a/iaFAxHLoD
      kQAt1zUBxGlQQddEAgi6JsYCdeB22vjVX/hCV3VomtbVV7+qachdlO/mta870QfoIJvN4vVe
      firgdZoRJvoAgnDNiAQQdE0kgKBrIgEEXRNngTo4jqT4+j/4/e4qad03uG/lZUni+//hd7oI
      4PoSCdBBrd7g051gv8PoijgL+mKiCSTomkgAQdfaEqBRr5JKpcjmi2iaRqmQJ19sDdfVNIVa
      /flb5CmNGs0ulpBVlQb1xk+3hlgulab9Bn0ahUIrVlDJ5wtoSpNao0kmleZ6rm4r9EpbAoS3
      d0hXq9TrDRKhA/ZPomSyZ2Ptayke70YoF4uETwLkS1W2PvpzPlrfp1JvEo+ckM6XaNbKFAp5
      0rk82VSCo+MQqqaRjkcIhCKoSoPDgz32D46oVysUqw1q5QKHgRNUDYrFPCeBI0q1BrVSnv2D
      Q2oNhWQ4TAPIJKPEUk/G/9f54H/9H/J1lWo2yv/4zvdQlTrFcpVYJIKiqYRPAkQTGTSlTiqR
      4DgURdM0cuk4oWjy9R3tz3B5ffzVL9/j13/+ft9i0Lu2BNBQyaTTFEoVTuJZ7q4sMTM5/tw+
      OxvrmFw+Dvf38Hi8jE5MUo0fkaiaON7fJhMN8MNP9zCbYe3xHk4tx3GqjCYZoBAhkKgyPj5K
      LBqDWpZEvsz65g5+t4W1rT0erz3C5fOyv3tIvangdljY2NwFoJGPcRApkjkNkK201iybW5zl
      JBAiFMkwMzGEWiuSOFvJEk3BYLZzGtgln0+wcZBAyUSJZdIchNLIlQRHkf5MpilksySrGqhi
      Fc1+aUsASTKxsrrKwsw4ZgkqF7RvrHYXA14PRgMYTUYsFguFbIFcJkZTldEkiZXbqzgsJgYH
      h3G77NTKZQ4Dx9QVhWqlTmB3lztvP0AGNLWJyerA7fOj1so43D68HicG4DhwSKFUpdFozXiv
      FrNksxkqdQVNPYvN7IJ6lqoqYzM9/5Yq6RgnsRTVegNF0RgaHsZtN1Mul3F5/AwOD1LOF3p+
      YH8aNpuFjx9tYnS4Ou8svBJtCWB3u8/PjS7fvMHO+iPWtvbO9rbgddlwud1IgNvtxj8+R2hn
      Dd/sAjZUzDYbNrsLm1kGyYDL5UA223E5rFhNBmqKjM1QJZYpcXK0T9Ngw+Vw4LXCo0/XmJpb
      xO12AzJutxOnw065UsXpcuNwu/GMzjHiMmIwW7CYjef7DbsdOP0j+LxeZKMFp92C0+3CbHci
      NauYLFZMZisuhxmzw4XPP0Ijf8rGbpi5+YnXdbyfIxtNfPntFdY2D/ry+oIYDdqRmBHWIkaD
      CsI1JBJA0DWRAIKuibFAHYwOeviP//Q3L11eO1sfQO7i/v6qoiB3uUiecDHRCe5ATInsTQyi
      EywIV5BIAEHXRAIIuiY6wR3kSxX+9IebXdSgoarddYK/dHeBucmRLmIQXkQkQAfRZI6/88/+
      sK8x/Od/8VsiAV4R0QQSdE0kgKBrIgEEXWtLgEIqxqP1dfaOTlDVJkf7O+wFQgA0Kzk+ebTG
      zn4ARb34+lk6meQFm3THZnfwtffucHPc0+9QhBdo6wSnwwnmV1dxAYdbj7AOzzPmMAHQLMRx
      ji8zVD1iL5zBVGqt0rKyOEkoHKNUVTjefsT4jVVuTA9xcHiMZ3CcqbHB1/2+rgS3w8KHj3b5
      1ldW2Q4/7Hc4wgXap0RqDbbW1zk4DpMuNxjzu7BarU+2crizwf5pGnM9gWIfYcqrsX8cZ+so
      zOL8LOMT06wsL3J4cMTiym0ykSB1nX4jZEp1vvmlVT748Ua/QxFe4KVTIr1WA7FMiVqt9mQr
      88u3efD5LzLisdNsNGjUmxiNMuMTU5iMMpKkoagqMhpNRUVR1a5uivYm++JbN1EbTWYn9PkN
      +CZoawINjI9jOXs8f/MOgYMDckY7y/PTGJ1DDEmtIvaBCVz5A9JNJ4vTQ6RLrQnqC4tzrU//
      5WUODnYZn1/CpNMM+OAHP+l3CEIHbQng8g+cP5YNJuaXbj7d2e7lybhISZKZmrtxvs3vaaWN
      3e3nltsPwMqt268iZkHoGXEaVNA1kQCCromxQB1YzCbuL09fvoInZ8C66Ad5nfbLFxZeSswI
      60DMCOtNDGJGmCBcQSIBBF0TCSDomkgAQdfEWaAO9k/i/NLf+Cd9jeEPfvc3+NZX3+lrDNeV
      SIAOVFUlnS/1NYZ6o31dHKE3RBNI0DWRAIKuvTQB6pUSF61fp9TKVBti+TnhzdfWB6jkYnyy
      FcThcjNkrSH7l/HZZSwmI9VqBYPJQjV9Qso8y4QLGoqGzWalUauCbMRkNFCtVJCNJixmEzTL
      /Pn3PmJwaJC5hTm21x5htjuYnl/G67RcFNO1MTczxd0ZPy6jwh//2Xq/wxEu0JYA2/snvPve
      5zBKEN77mJOTIAflHDen/ASTFRr1OjcnbKA1+eTjdXwDQ4yNutncPUVW69xavUM4HCaTznLv
      wQPMgNliw+N1U06c4J1eYXH88kML3iRHxyc47RaGjPV+hyK8QFsTSAbUs+FBksHE/MIN3A4r
      yXiUptJEqddoqIBkYHTYRzabIhFLUGk0UdUmiXiSXKFIsZjhyZLCFpsdt9uN0WhAVfXTdLpz
      exlHPcdfbIb6HYrwAm0JcHN5jk8+esinj7cxGM3IMpgtFiam55BUBbfPj9lkxiRDrd7EIIF7
      aAKHEaxODzazjKqBxWJDlgBJwu3x4PV4GBifpRI9YG3tEZlCtQ9v9/VKZ3I4/EO8tTja71CE
      F2hrAlmcft57z//cc74brZlfDwae/ke6AHxPZ3z5P/fg/PHw2OQzpW0sLUy1HkpG7j34XPdR
      vyHC4SjhcLTfYQgvIU6DCromEkDQNZEAgq6JGWEdRGJx9k4zXdTQ/foAS9PDjA76Lh+BmBH2
      wvJiMFwHNouZr7y9fOnyvZoSKbwa/x9jsMKCoYfGDQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Top 10 Coaches By Total Appearances' width='192'>
      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
      A45u8kaRhJ5hvrrKci1GWPU/sPyiKikMO3oAWK2tM19dxcCg29a2BQlkBu3dxLUM63rdcjXk
      6PnGrEOPtQ5g1opcvTXD3v37sCpZJhdi7N29k4XJ26jBLjp8Cjcn5hkdHeZff/sbjr78NkO9
      HQggFVtmfjXD3r27iS1No+Ohu6+VyfEJwu2d+J12HL4AQitx684c3b09qELg9XuYvHWTrqEx
      hFbB5bZx+/Y0bd2ddLa23jO/6NIsC6tx3ME2+sJO5lbT7Ns7RmR2HMvZymBPW8PnsjYywypm
      jbJZpWCUyBgFMnqOpJ4hqxfuSaGUkWhRg/TbOxmwdxFW/I8ci2NZFovVNc7mr5M2cshI7HON
      cNizB/tDmjxP5C6hWTo7Hf286juMKjUXp2qmxh8yZ4jU1mlTQ/w4+PI3Yh16rAnwsLAsi5qm
      Ybc9/oWgLMuiZmlkjQJrtQSrtXVWanGqG4QQCIKKjxFHLzsd/Y8U4Qn1hXmjNMXlDZNnUPbx
      uv8I7Wr4gSbPqJbgWOYsJbNCr62D7wee33JnL5tV3kudYl1P0Wvr4IfBFx/Zafdl8Z0gwJMO
      wzKIaUnmK6ssVFfJGHmgToY+ewd7nMP02jseaXGl9CwnspdY0xJISBz2jHHQPfZA3SOt5/h9
      +jRZo7Bh938Bp9TcQlQ0yvxr6mOyRoEx5yCv+g5/rZGk2wR4wmBYButaisnyIjOV5bsnQ1Dx
      sd81wi7HwJaiyWehWwbXi5NcKNzGxKTP1sHr/mdwy84tv5cziryfPk1Sz9KhhvlR8KUtrT1J
      LcPv0icom1WObiTlf12xQ9sEeEJhbQTWTVeWuVWaIaGnsQC35OSge4xR58BDKZ510SbJx9kL
      ZIw8HsnFW4Hn6LS1bvm9klHh3fRJEnqGdjXMj7cggYVFpLrO79OnsLD4fuAFBh3dX+SxHxmP
      tRXoflSYm4wRbPE1+MzkyqVLtHR0IYsyv/vX44yODbM4eY3llE57uNF36qgVk2RqMi5bfefM
      RReYT1RoCWztyClm4py7OM5Afzdg8eE779A2PMq5j97hzvwaPb19KH+hiDohBLKQaVWDjDkH
      abe1UDLLJPUsS7V6iqRdshNSfFvutnWTp4sRZx8ZPc+6Xrf7u2Un4S1MnqqkMGjvJlKLEdfT
      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
    </thumbnail>
    <thumbnail height='192' name='Top 10 Players By Goals' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Top 10 Players By Total Appearances' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nOy915dcV3bm+bs2bIbNzEjvkfAgQQL0VNFWsZyqVKXWQ681DzP9oKf5H7TW
      PM/LrB7NWjPT3dNarW5VSSqpDFlFB8KRAAEQHum9N+H99fMQGUmCiJsJsCiyAOTHBwCMc+89
      kXm+e/b+tjmC4zgOe9jDYwrx257AHvbwbWKPAHt4rLFHgD081tgjwB4ea+wRYA+PNfYIsIfH
      GnsE2MNjjT0C7OGxxiNAAAfTNBv/f8P62p9mWyb2VujQ+sLf9/BwQvqbv/mbv/m2J/EgmBu9
      zrmLn+F4/HgFSGfzZNJpPJLD7OIatp7hvfc/oa27heRqAdvIsZIsEAl62dzcYDNbItzkY256
      GtUfQpUlzv/u11ydnGY9XaI7EWV6Zo5QJEopn2ZhaZVwJMLK3DQlU6A4fZoleRilvMrp371N
      ZN8RssuzmKIHn0e5a67F9Br/5Z/f4cSxw1w+/yHXb9zCkEPMj3zKlSvX8cU7iQQ8OI6Djb19
      nSAI3/SP9bGF/G1P4MFgMzG/xo9+9EMEocD/8b/9Z3721/+e6ckZbl1dY+DwSRxBRNcsFKnC
      1Ogm+480sT76GfniYW6MzRHXNFYGwviC7dz46DQ//f6bVMoCb/z8Tc784QPOnV6jtauLj85c
      YmP5Ngf7erljeQgCNz96n2NDAaxykjO3b+KXRVYnb5Iq2ZSu3eG7f/5jPF/YUz3BKO1tcQA0
      XcO2HUqaRldXN0vrtxAAwzF5O3OOrFkAQERAFmQUUcYjKHhFDz7Rg1/0EpT8NEkBQlKAgOjb
      I8rXgIeMAAKWqaOZJoJjcPip5+lqjTABvPDiS7z/zvsc/+53aWltIeBVwda5eP5jssk5esP9
      9A/tx7c0R6ZqcOjoACuL89hAtZTk//3b/8iL3/0rMnO3GegfYGH+EonOHvq6u5hdXuKjqTk2
      Fsc40HcSrZQn1NxJOG+SK5bo7jvEam4Zw+YuAiiqB0kAsMmXLV575TnOXZrh6ItPceJAmpn1
      NG3NPip2Fc3Wcbb+s3FgF+tNRiIiNxGTw8TlCM1KhLgcxid6EIVHwLL9hiA8bMlwhdQqn1y5
      wfCRY4hVgd7BVubnlrGrGSYWM7z0Zy9y48Ip+o4ex8japNbHKWgmvcOHkRQPciFPMBHi4sef
      MnD4aQa7Wpgbm6LzwCCTt27T0hLhs+sjHH/2JSr5TRKRJvJlm1u3PkP2+jm6rxMn3MfMZ2co
      GQonXzjJ1U/OEu7YxxMH+u+a69LkHc5fu0Nbzz764wqj0yscO3mS1bGbJMsWz77wIpGAB902
      0Bxj2xSysTEcE802qNoaFbtKya5StMoUrDJFq0zJruBw969OQiIsB2hV4nQoLbSrzYSl4N5O
      sQMeOgI87qiTxHBMcmaRlJkjaWZIGllSZg7DMbZpISLQJAXo8bTR6+mgXWlGEeQ9QnwBewR4
      hGDYJmkrx5qeYkXfYN1IU7Ir2597BZUuT4IhbzddagKPqH6Ls/3TwB4BHlE4joPpWKTMLAva
      GrPaCikzu202eQUPfd4ODvj6aFeaH1u/YY8AjwkcxyFvlZjVlpmqLrJpZLal14jUxCH/APu8
      PY+duvR4EMCx2czmaYlGvvIt1jc28angC4Yo5gyi8eDXOMFvFrbjkLXyTFQWmKjOU7BKAKiC
      wpC3m6P+fcTl8GNBhIcuEPagWLtzmSVd5fbYGH7BQVFFzp89RyCWIL26yNziGm2JFi6ffZ+r
      t8YRfUFmb19lKVOlOShy6qNzBONtVKpFFieu4o+FuXVlHa00y+2pFTrbonx85jSmEiIWCtz1
      7InbV/jVR5c4vr+Xj059wAdv/xrdE+P2Z5/yL7/5LUeeehaPJLBhpFnVk2StAgWzSMmuoNk6
      FjY2Do7jICB8bQtSEAR8opdOtZWj/n0k1Di6Y5AzC2yYaUYqM2yaGYKS/5HfER6yOMCDw3Ec
      HAcWJm7glTxINy5RCcT4/XsfQHaZH//7/wCYZCoOP/7RDwCL0fQaZ878AXLHsXxNqLLIlfFx
      Ep7P7+vxBVi5/CFXVIGVvMW+L0WBAYaPnGByPYeo+Hjtze+hWyLPPnkAa7gVOdhM2CtRsTV+
      kzmD7hgN5y8joYq1gFhA9BGWg0SkJqJyiIgUJCj5v7L9LggCEgJ9ng561XYyVoFbpUkmqvPM
      aSvMa6t0qQlOBA/RrjQ/kkR45AlQR6y5lWIuTdzjpaWti32DXhYnm4gFPYCDVS2ylkoh5pe5
      OpdGVUyiffuJ5hc5d/k20hdvZpX49PIiAb8Hy9fMycNNnDvzCX/1lz/4wiCHSrlMpVJB0w3W
      Jz+j69BJRODSp5c58fwbAHgEheOBA6TMLLbjYGFhOCa6bVC1dTRHR7N1KnaVNDkW9c+fICHi
      EVWa5QgJJU672kyLEsMjKA+8WAVBICaH+LPQU5wIHuJWeYo75SkW9TWW0uv0etp5LniU2CNm
      Gj3yPoBeymPIXqqVCh7bQAw0MXrjKj3Dx1AcnUg0CoCtV7hy9QZDh46xOjOCN9JCR2uMGzdG
      OHL8abRKAVW08QaClAommY1ZNNFHR0c7U3du0r3/GC1h/xeebDNy7TM282W6Bg8S80tEojEE
      QSCVThOPxe5r/rZjU7V1ynaFolUhZxXJmgXSZo68VaRkV+8KiElItChRutUE3Z42WpQIsvDV
      3nMVW+NmaYJb5Sk0R0dE5KCvnxPBQwQl/+43eAjwyBPgUUVd5izbVTbNDOt6ilVjc0vd+fxX
      GhT9dG9p/51qAukBzSXHcSjZFa6VxrhdnsLGwSd6OBk4zGH/4EMvn+4R4BGC4zgYjsmKvsmC
      vsaitkbOKn6u/YsehjzdHPD10axEH4gMjuOQsQpcKNxgXlvBAVrkKN8JPU2rEntozaI9AjzC
      sB2blJljTlthurpIyswBIADNcpRD/gGGvD14HyAibDsOs9oynxSuk7dKSEg8ERjmRPAQylc0
      tb5N7BHgMUGdDBOVeSaq85TtKlBLj9jv6+Oofx8hKXDfb3LN1rlSHOFmeQIbh7gc4bXwSVrk
      6EO1GzzycYDR8QnizXEq2TQVW8KjSDuMtrhy6RodnR3M3PyYNS1AS0jlgw/ep6d/CNH192qz
      vrpBsOnu4JhRLXL2whX6e7vJJVc4e+4T/LFWpq5/yvXRado6u/HI34wNLQgCAclHj6eNI74h
      4nKEqqOTtQqsGSlGyjNkrSIRqQmv6Nl1EcuCRI+njU61lQ0jTdrMMVGdR0Qi8RCZRA/fnvWA
      GBkdY3j/MJtrizjhBO/+62ksxcdzB2N8NJrDL8rs7/KxsLpB/+EXyOfyAKyuzLOyaNHp6eLO
      5DQHB0e5cGOSSEsHdnIWM9jGoYTMpekUzz73PIt3Zki0J+56dqlUIpVNAXDu7BmUYAuqorD/
      iRMIV8+zkswz1BnmfP46aTOHKIhIgogqKKiCsl0IE5B824UwiiD/0UExRZTZ5+th0NvFppnh
      ZmmSqeoi49U5pqqLDPm6ORk4fF87Qofaws9jr3OxeJPb5SkuFG+wamzyaugkPsmDwJ82ER55
      AtRhGQbG+iTRY6/TnRtjrVjl5EtvsH71Y0bu3CKc6KdSSn1+gSDTpNhcH1/kwHAP49duY6l+
      tHKV/p5Obk1u4Dv2NL6ZNdLpLJqm3/PMSDxBOOAFoGzCT14+wfunLnL8UDvreY0BsVYRNq0t
      UrG1+/oeAdFHVG4iLkdoUaK0yFGa5MBXsr9FQSShxHkzEucZ8zDXSuOMV+cYr8wxVVngiH+I
      pwIH8Eu+He+jigovNz1Ft9rG6fwV5rQV/in9Pm+Gn6ddbX7geX2TeOQJ4KXKH37/B4b6emnq
      GMI49yFjapjnDiaoqCJGc4yuzhNMLKdpbW1HtWoJYuF4goP9g5y9vMC+jhYSB1s5c+kWbX2t
      VIsrSKJEpVxFkiUERGLN0XuePTd2k6mJKfyhNo4fHOK9D87RP3yQyekZdMPGqyp4RJWfx96g
      ZJexHAfLMdEdE82pFcOUrQpFu0LBKlHYKoQp6RWW9A0ABAQCoo8WJUqXmqDL00pUCj3wDhGW
      m3glfIInAsNcLY0yXpnnRnmCyeoCJ4OHOegb2FE1EgSBfm8ncSXCB9mLrBpJfps5w0tNxzno
      6/+TNYn2nOCHAPVfkY1D2a6QMnOkjCwbRoYNI03Zrm5ndgpASArS5+lgwNtFqxJDFnbyexo/
      L2lmuVC4wZK+jgO0KlH+rOn+JE/TsbhQuMGt8iQO8KR/P881HUV6wHl8E9gjwEMO27HJWUXW
      9BSL+hor+uZdRTBhKciAt4thb+8DZ3jWJM8lPinc2JI8RY4F9nEicBhVvDf36YtwHIeRygzn
      89cwsRj0dPNa+OSu133T2CPAIwRnK5do08gyU11iRlsmbxWBWnlkqxLniH+QAW8XsiDdt4Oq
      2TqflUa4UapJnjE5zKuhk7uqPY7jsKRv8F7uAlVbo11p5vvRl/CJHtdrvmnsEeARhu04rBlJ
      JirzzGhL2452QPRx2D/IId8AgV0c3C9iTU9yJv8ZSTOLhMiJ4GGOBw7sGlFOmzneyZwnZxWJ
      y2F+EH2ZkBTY8ZpvCo88AaxqgWRVJBH50/iBf1uo2hoz1WVulSdJmlmgFgQ76O/nSf8B/JL3
      vu6j2waXire5WZ7AAXrVdl4Ln9xVKcpbJd7JnCNl5ohITfw4+meE5G+/qOiRIMA//etveP5o
      L3N5LwF9gyIhntoXY3o1TyjoR2lqJjk7yka+SpNqE+85zFB3C//1P/1fRNu6cYQgLx/v47PR
      BV58/ji3rt2mbIscHUhw8bMb9Bx4Crm4TFGM0B/2Mr48j8cTJF/SeOHkYS6cv0jX8BMM97Xd
      Na/1+Ql++YeP+F//+q/54Df/SFXy8+TJk0xdv8rGRpKn3/gxg21hSlaFqq0jCQKSICEhIgkS
      siAhIn6tCorjOCzrG1wvj7OorWHjoAgyT/iHORYYvi/zxHEcFvQ1PspdpmRXCIo+3ow8T4fa
      suN1VVvjd5lzrBspmqQAfx79DhG56ev6al8Jj0Qk+JMz7zG5qvGTt14in0lz6fz7BP0it1I+
      TrRb3Nm0WZ1bJGhXGXz2JNfPXGX/oUFuXLuCx+fH39TM1U8/QhVMltNpNnMqCXWD6OCzOLlV
      omGZX394g83lCeyMTt/LTzN+cZqEN4kVH8YspDh74SLPPP3UXfMKRuIUc+sMDAyTTm5QKJbx
      RTs4PNjBairP/v3DIFn8MvUe18pj3CpPcaM8we3yFLfL04xUZpioLrCorbFpZilaZZytBftV
      FRVBEAjJQfZ5e+j2tFGxNTJmjhVjk4nKPKogE5MjiDuQThAEInITQ95uNo0MKSvHdHURn+il
      WY64ElYWZPq9nazrqa1i/VX6PB3faneKR4IAM0vrPDnYzEY6y5WRFQJinlgsRmLfszQLaVYq
      HgS9glcU6TnQz+ydOfYfHmJyeo6XXn6Z2elxvKrCwaNP09MWJldRaZJzWLrBXA4OdsdYTJZ5
      8dkTCNkyrcf6yc7nCKhZZpdziIEwm+tLnHz66bvmVS4VGB29TUdXPw4OXS1h5pIZbn12g+df
      fIFQMIAkiqTMHA7gEdTthW1jo9kGRbtMxsqzaiSZ1ZYZqcxwszzBTHWJlJnFsE08olpzah9g
      pxAEgaDk3yJCgpxZJG3VEucW9DXicmTXckhVVNjn68FwDNaMFHPaMiYWnWqr63WKIDPg7WRV
      T5Lc6lgx6O361tShR8IESqXTxKIRMpkcmY1lBF+IRKwJPGF8VCmaErahITkO/nATuXSeWDzC
      0twES2tZ9h06QlDSuT0+x+HDB6hqNoqgUSwUmV1Ypr1nCI+VI12V6W2OoEaDlDNlZFFHVP1M
      jE/S2tlOe8vdJkDt/mlC8TY6ox5mVjIcPTTErWvX0Syb/UeOEw3ea3LYjo3uGGi2TtnWKFgl
      claRjJnfKoQpYTifd8QWEWlRIvR42unzdNAsRx44T992bKarS1ws3iRvlRAROeof4mTw8K5v
      6LrkeS5/DQuLYW8vr4ROoIjucdaKrfG7zFk2jDStSowfRf/sW1GHHgkCPE6wHRvNMciYOVb1
      JMv6JqvGJqZTayYqUDNP9nm7Gfb2PVCGJ9Qlz9EtydMmKjXxavgZ2pT4rpLnor7Ge9mLaI5O
      t9rGW5EXdnyzl6wKv86cJmPm6Vbb+EH0pQcO2v2x2CPAIwDDNlkxNpmtLrOgrVKwy0CNDN1q
      gsP+QXo8bQ9UGrlhpDmdu8KmmUFE5OnAQZ4KHtx1gSaNDG9nzlG0K7Qpzfwg8iK+HRSmnFnk
      X9OnKNoVDvj6eTV04hutMtsjwCMGwzZZM5KMV+aY0Za3TaWo1MRR/z4O+Pp3NE2+fK8rpRGu
      lcZwcOhWE7wWfmbXeuCMmeftzDlyVpGEEueH0Zd3NG/W9BS/3eqM8XzwGMcDB76x3KE9Ajyi
      cBwHzTEYr8xxpzxNxqqleftFL08FDnLQ139fjmctmrvOqdxlinaZgOjju5Hn6FBbd7yuYJX4
      TfoMWatAYsvG97qQwNmqMns3+wkAb0VepN/b+YDf+KvhoVeB9EqRkmYjOTrFqoVHvffttra+
      SjDYRDqdwuv1kculUVTfjlKfbVa5fnuCttYv98NxmBmfI9og+/MeODbrG0mCwQDLsxOMTMwQ
      irci6CXyVfueE2W+TgiCgCxItKlxDvkHaFYiFKwyWavAgr7GVHUBj6gSlUO7Sp5hOciQt7uW
      hGdmmaouEhB9O0qeHlGlz9PBgrZKysyxYaQZ8HQ1lG8FQSAqhxAQWNLXWdTW6Pd2fiNO8UNP
      AByDDz46x9rCLPFEK5+cPcXiZolSLk08GmRsaolKKUVLSxvvvv87Duw/zLnT79DS0sqH758i
      p8HG0gQjkwtsLE5w+/YtKkKIxbHPmFhM0t3q4523TzO9sk5HROHdD88wOb1OUC5x/tPPCIZD
      fHL2FHem1zgw1HfX1GbGbvHRp7d44sh+zn9ynqHhQ0SDKhc+/oD1DQ99fXFsx+FWeZKxyiyL
      +jqrepJNM0POKm6lLjhISLWsHYGvVGAiCiIxOcwBXx8JJU7WLJCx8sxqyyzp68Tk8H1JnkPe
      7i3JM8mctoKNs6Pk6RFVej3tzGorJM0saTPHoLfblXAJJU7WKrBhZljX0+zz9vybZ5A+9AQQ
      JZXi8giLepjj+9pZXFrh4s0RhluDpAp58LWytjDKwMAwtz47x9ziBjdGxglqBZZ0mY3lNcqF
      FK+88T2m52b53vee5/aFBQJNNuMff0rT4BCxeD9aZY3s6gbPvPE98itr3LpzCa9HpSyGaPc7
      dO1/gmjwbmcv2pJgY3WFwcF+9FKeqYlRLG+Co8OtrK+a9PTFqToav89+zKqRZN2otTZZ1NeZ
      1ZYZr85xszzJjfIE09VFVvRNClZpKximPLBiUg9gHfD1E5abthfleGWWqmOQUOI73lMURHrU
      NvySl0VtjWVjg5JdodvT5uq4ekWVbk+CmeoSm2aGiq3R42lrSBpREOhSE8xtdbLWbJ1eT/u/
      qT/w0BOgkl1nbF2ny1difmmTubUcZUPjJ2+9zN/9wyl++NbLzM9OMjAwzOTsDD/+0U+p5Nfo
      GxhgeTXL8MEDgMmBoSFmZmcY7O9gemSN8dkbSLpFYv9+RMdDubRJW8TD+SsjFAoanW0hbDlI
      b4uPX/3hY1paW+hu/6Jd7HDz0nlOnb1ANNFBbnOdbL5Ic3Mzn108w7Wbixx+6hBBRSWhxGlT
      43SrCdrVZprlKGEpuGUzO9vxgLSZZ1FfZ6wyy2h5hiV9nYqt4RO9eETlvncHURBoViLs9/UB
      sG6kWTOSzFSXaFYiNO2QqCYIAi1ylLgSYV5bYd1IkbMK9Hk6XEngE70klDjT1UXWjBSqoLjK
      qrIgkVDiTFTmWTdTNCsRonLovr7XV8FD7wS7TV8QhFpT2S/96YbPx8FX/Yl82Ve4n/vspq0D
      WNhkzDxJI8u6kWJta9HVtX+AZjnCsK+XQW83TaL/vt+ajuOQMrOczl9h3UgjIHA8cICTwcM7
      7gaO47BupHg7c46qo9Pn6eC7keddSzMdx2FGW+Ld7AWg5ugOuDi6zpZZeK5wDb/o5S/jb+xI
      yj8GDz0BHkc4jkPRLrOqJ5nXVlnQVqk6tZpkWZDoUds44h+iU03s6OB+EYZjcq04xmelkW3b
      /vXwM7suvHUjzTuZc5TtKgOeLt6MPLcjca4UR/i0eAuvoPIX8deIyeGG4yzH5vfZ88xrq/R7
      Onkr8uJ9f5cHwR4BHnLUu8Et6xuMVeZY0Ncwt7T/ZjnCU4GD9Hs778tfcByHFWOTD3OXKFil
      +5Y8N40Mv82coWJrDHt7eD38rKs5ZDs2H+Q+ZbK6QLMc4aexV11TLYpWmX9Ivovm6LwRfnbb
      ZPs68dD7AI87hK0U6qgcYp+vh/2+PryiSt4skrUKTGtLzGnL+EQPEalpR9NIEARCUmBb8kya
      WaYqiwQl/47llAHJR4fSwnR1iQ0zjeGYdKmNHV1h29GtyaMVW6PP09FwrCrWWsPMaiusGSmG
      vb1fe9LcI0kA27b/zZQD27a3bHOBP8VGBx5RoUNt5aBvgLAUJG3myFoFprZUpLgSxi96d5U8
      B7ckz1Ujyby2giiIO54REBB9tCpRprUlVo0kqijv6Oi2KXEmqvOsG2micoi40tgUisth1o10
      TRXa8jW+zt/tI0OA+clb/PM//oqldJWJuUkCsoTia0IvZtnMlQh6JZKbmxQrOulkkkBTExur
      i5QN8CoC8/ML+IIhZEnk//mP/zsHn36etdFrnB2bx4dFMV8Ej4dz506TX5jF1zlAbm0RW/Zi
      GhqlfA7F67/LTs0nV/jFb9/jiSOHwLH45X/9Pwn1PsHIpx9x9eoNmlq7CflVTMdCdwwsp97Z
      4Y8/DUYSam3SD/sHCUo+UkaWlJVjtDKL5ugklNiOuUF1ydMrqizq6yzq6xiYdLno/vWAWVgK
      MrMVX2hWoq4KTkDy4RFV5rVVVoxNBj1dDU0hQRBoVWKMVebYMDJ0elq/1nLKR4YAkXgCo5Dl
      uVdeZez6JZqafNy6Mc3EzBRGeonNfJ6rYwuMXPuYkFhiohTEYxY4/fEFKCyzVlWJhiP4vQpj
      t85iqt2sb64h2lVW0xkODSS4eWcJwyjiF8CqFpnaKDE9Ns7UyCXyppeejnbEL/ZPFGWSqXWG
      Bga5deUTLAz8bQc4sn+QUnIRT6yDgF/iX9OnuFwc4Xbl80KYGW2JFX2TjJlHsw0kQUL9Cmf8
      ioJIqxJjv68Px3HYNNKsGSmmq0vE5BDhHcoS64svLAdZ2FqommPQrSZc5xGTaz2JlvUNlrQ1
      ej0druWWzXKElJll08ySt4rs8/Y0vK9P9GA6FivGJikj97X2GXpkCACwPDdDa+8gy+sbvPTc
      U8zeGUOJNnN0IMbcYo62/mF8ksZT+7q4uZJn/uYtRifm+P7Pf8ra+HU2iwp9XS3MLC4hllOo
      kS5MvYhpO3Q1N7GWMTC3CFDIZxhd3iQejqH4VF57+SWkLzUPlWWF2bkZBrs7OHv+Isuz4xj+
      TjYmP6Pr8Av0tkZwcBivzlG1NaytA7ArTpW8VSJpZlnS15msLnCzPMloZZZNI4PhGHhFzwMd
      eq0IMt1qgn5v53YAbKK6gG4btKvNroXttZNjwrSoMWa1ZVaNJPoOJBAEgXalmbxVYt1Ms2Js
      MuztaeiEC4JAh9rKeHWOpJmlSQ7QojROMWlVYkxVF8lYeZok93EPikeKAIIg0BSJIosC8WgU
      UQ3gd4pMrOm8cPIQqjdAKOAjEo0j+8JQzdPeO0gi4mN5Pcuho0dp8qsIokg0GKJnaD9+VSYi
      24wvbNLT108sHCQWi9F36CjFjRVibV10JZqJRRt3hpuYnievy7z1vTfo6+mgp7+H2dtjrG+u
      Eoi3Ewn4OODr54h/iGP+fRwJDHLQ18+At4s2tYWIFEQRZEzHpLTVFGtWW+Z2eZolfR3TsWiS
      /PeV4SkIAn7Jy7CvF1mQWNU3WTWSrOhJOj2trmpMPYIcVyLMaSusGkkA1zQIQailYc9rK6TN
      HCWrSr+ncxdHd5n1HRxdSZDwiR5mtCXSZo4Dvr6vpXZgTwZ9COA4DiYWebPEsr7OwlYDrHqq
      syrI9Hs6ORoYpvU+25M7jsOqkeTD3KfkrdJ2YftOjm49a/O97AVsbF5qOs5R/z7X8Skjy6/S
      p9Adg9fDz7Lf29twrO3YvJ05z4K+ykFfP6+GTjYcZzk2/5I+xbqR+trSph+pHeBRRU3qFPFL
      XhJqnGFfL4f9QzTLEUzHJGcV2TSzjFRmWDWSBETfrpVggiDQJAXY5+0hbebZNDNMVRYIy03b
      dnyja6JyiIDo364dbtnB0fVLXnyip7Zr6JsMersapkQLgkBCiTFarh3P2u1JNAzAiYJAk+Rn
      vDpP0shwyD/4R+8CewR4SCELEnElwrC3lyFfN7IgkzZzZKz8lryYIi6H8e0ieSqizKC3C83W
      WTNTzGoreCWVVtm961uzHAEBlvUNFrU1ej3tro5uXI6QNnNsmhkyZoFhl13AK3ownVplW8Ys
      cMDF0Q1JgdoYK48qKLu2YtkNewR4yFE79NpDl5rgiH8IRVBImVlSZo6Rygyao9OqxHZsny4K
      Ir2edmRBZklfZ15bRRHcdfy6o1uwyqybKZb1TfZt+RWNxnaoLUxU50mZWYKS39WBbVGiTFQW
      SFu5Wgt4JdLwfkHRz0R1jrSZ56Cv/yufggmPIAGSq/NcuXYbXzhOwPsFp86xuH7tJq2tEaZm
      14jHQji2ya2rl8npIvHIbg2aHEZuXicQbWF+YpZYy/0cc+qwurJGU1Pt3gsz43iamkktTzO5
      mCTREv/agmn1ApgOtYX93l5sHJJGZkvyXKxp9HLQNWNUEATa1Dg+0cOitsaivo4qKiR2IEHN
      0V0lbeUoWmUGPF2ujq5f9DKjLbNhpF0dXVmQUASZOW2FrJXngK+/oToVlPws69jBj4cAACAA
      SURBVJukrTx+0UvbH3EGwSNHgFMfnObYC89w8dQZIgGJM2fOYihhNpbmOdQT4sa6xurCGoP9
      HXz84R9oHjiCTwaqad798Cy5KsyPXObWrTsYvggjn57m3JUxQorB7dFxQoluZu+Mowglznx8
      EW8gxKVPznHp1iRHD+67ay7LM2O8e+Yyx584TG5tln/8xd/TdegZ0qkcZnKeireZaNDDor7G
      gr5G2sxTsMrotrEdDBO/QlBMERV61Db6vZ1bVVw5pqqLaLZOh9LiLnki0CrH8Es+FrRVFvV1
      gpKPZiXakDjSFuEmKwtsmGkCks/1jLCYHGLDSJM0s+iO4RrRjclhZrUl0maekBRo+GxBEPCK
      KpPVBfJWkUP+ga9cSP/IEWDs5hXuTEzS2jVEa1hlLbnO1PQSkmMy2KpwdUNA0qoM9ncwOjXB
      UFuMtz+4QLGa57U3v8/kjWvoiLz18pNcmstxsD1IU2s/AVEjtTbPZF4laGmMjt3E6/WSrEoM
      t/qI9x2i9Uv9R0PRFjIbK/T1dvDf/uFfCKkmSuIIUdKslkWeODSIjsa/pE8xoy0zqy0zVV1g
      pDLD9fI4Y5U55vVV0mYeC7vWAIv7a4BVlzz3+3pRBJlVI8mqkWRJ36BLTewoebYqMVRBYVFf
      Y15bo0WOurYw9G0d4TSjLbOqbzLg7WpYyli/753yDEkzQ6+3o2FjXlEQ8QoeprfkziP+fQ2z
      QMNSkOnqElmrQLMScc0q3Q2PHAGmZxb4zusvMTk2SWpjGVv2oOkWVDZZXFzEifcj6xoDfR1o
      6Q2uTSygGw5Hhto4f+EKlhrEJzn0d7YwvZHjg9/8lnBLCytT46gehYoaJ+QYtDQHKFkS+3pb
      +Kdfv0cs1kxPd/td76qxm5f48PR5fJEOnjlxjFJyiXhnD7/6l3eIR0K0dHQT9HjwiR6aJD8x
      OURQ8qMIcu2EeEcnb5VYM5JMVhe4U55m1UhiYxOSgvfVN1QURNrUZrrUBCv6Jikzx0x1iTYl
      vmMZZEKJYWOzYmyyqK3Rs6OjG94uZcyYBVe50yd60O1aflHeKrmOi8i1dIqsVSAsN9Hs4gsg
      wLy2SsXWOODt+0qS6F4c4E8U9RPak2aWNT3Fsr5O0sxuF8GogsKwr5cjviFX2fLLqNhVPsxd
      2nZy3ww/R5+3w9UvsB2bD3OXmKjOE5Ga+Hn8ddfODmWryi9T71GyK7wSOsFh/2DjOVhV/iH1
      LhW7yg8iL9Pn7Wg4bqwyy4e5SzTLEf4y/kbD2uCqrfH3yd+j2Tp/FX+T5q8QHX7kdoBHBYIg
      oIoKEbmJLk+Cg75+Dvj6icpN6LZZe+MaaUYrM2SsPFE5jFdUdyyLrPXl7KJiV1k3Usxqy5/r
      /g2uqzu6i9oaaStHwSq5OrqKKG9Fand2dBVRxnFgUV+nYJXY7+tzMXGamKwukLEKtKnNDU0w
      SZAomCU2zPTWsa3tu/1Y773HHgEeDtQJ0arEOODrY9DbjY1NxqoFsUbKM2i2Tst9Sp42tTbp
      c9UVonLI1YaWBIlOtZWp6gIbRhq/5HGNEcTkMBtGamunMl0L2uNymPHKHBkrT0KJuyxuEcux
      WNLX0Ry9YaKcQE0CHq3MUrDKHPINPHAXiT0CPISoO7j93k72eXswHYuUmWXVSDJVWaBJCuxY
      /FIrSmmtkcDYYF5bIbGV9dkIXtFDUPTXcv315I6ObrMcZaQyw6aZZcDb1dBvqC/SRX2NolV2
      DXpF5BA3S5PkrAL7fL0Nza+A6GNWW97qQhd74AL6PQI85Kg3oOrzdpA2c1u9+peoONqW5Nn4
      jVgPUBmOuVX0skaPp83V0Y3JIfJWzdxIm3nXiK5P9FC2q6ybKcp2hSFvt+viHqvMkrEKdHva
      aGrQblERZLJmgaSZRRVkujyJe8YIgoDhmCzq6wAMuphobvjmupB+y9hcnORXv/4Nl26McT9e
      v2ObXL/0MX/44DTFqsHa+uoDP7NSzHDx0vX6DfnonffQcFieGWFyfv2B7+cGQRBoUaL8JPYq
      LzY9iSxI3C5P8ev0afJWyfU6URB5oekJ9nl7qDoaf8h+TNXlwG5BEHih6QmCop9lfYPRyqzr
      uKeCB/EIKnNbbVMawSuqHPINANSOW3LRYg75a2MmqvN3dcH4Iga93QgIzGkrrmPc8NjsALOj
      t2g5/DyF8RssbKwRamnj5tXr5DcXOHX6POGoyv/4H+8yNnGb/YeOsjp5jaK3kxeOH0CSJG7f
      usLG4jSXb9xgM2swcfVjPrt+BVMQOXX6PLbkp635brkuk0wxfmeG/YeGGL9+kevXF9j/7GGy
      K6usrhfo7WnHdCzey17kcuk245X57UVTsMqICHhFz32/0URBoE1tptvTxrK+QdrKMVtdokNt
      cT0Mr+botrGkrZO2cuTMIoNed0e3FtFdYtPIsN/b2zANWxVlNEdn1Uii2brrLtAkBRgpz5Cz
      iuz39TaMTfhFL9PVJXJWkQ61paGZpgoKS/o6eatEixJ9oJjAY7MDYFd555f/hXUlxnPH+jl/
      6kOUphYy2TRmMcn8wgaDR55hX3cIw4JSuUwk0sQffvF3XB9bo1otky0b/OitV7Gzq1ihPl5+
      6iCGGiPiV0in0/c8srWji4BXQS9u8u65y2yuTjE9l6S3v2s7BcJyLDaMFGkzv63M3ChPcDp/
      hV+k3uM/b/ya97IXmK4uodkGzn3sX61KjJ/H36BbbaNgl/l1+jQr+qbreFVU+G7k+e3FfbM8
      6fpG3uftoUtNULIrfFYabThOQOBJ/34UQWZWWyFl5hreKyQF6PW0Yzgm45X5hmMkQWKfrweA
      yep84+cJAgPeLgBmqsuu37Ph/R+XHaBUKHD4hdcR0nMEOw8yeeNTnn/lO8yM3ECQvbR19aB6
      QgQ9OrGWblqaI1w+dxZT9jG0/wC2USQgOly9PYqptKJUlxiZmCKU6EMvpJA8fvp77m70dOfq
      x3x24w6eeA8//dFbBCSVoYPdnPngFFMzi/QPH6DJ62Gft5cDvn72+3rp9XTQokTxi14sx6Zk
      V0hvpTKMV+bQbJ2I3LRrdwRFqGV55qwSm2aG2eoyHWqLa2tzr6gSloJMVRdZM5IMeDvxiff6
      A7UKsZr9vmlk2O/va/jmVkSZolVhw0zj4DTs9lxXtiaq85SsCkf8g40zRQUPdyrTlO0qh/2D
      Df0aVVAYqUxTsTUO+wZ3Pbp1ew6PYyAst7HI6HKR544ffKDrZkavMzq9yJMvvMr6+FVWM1Ve
      ffNN/Mq/UQcKx6ZglZnVlpmozJM0s9uH5B31D3E8cMA1MFWH6Viczl9hvDKHT/Twk+irrh0Y
      HMfho/xlRiuzdCgt/CT2SsMcG8dx+DD3KePVeQ75BngldKLhwk2bOX6RfA9JEPmfmn/Y8KAM
      y7H5b5tvU7TL/Cz2Ou0NEtscx+EXqfdImVl+HP0OPZ62e8bYjs0/JN8lY+X5Wew12u8zTfqx
      2QG+CG8gTFf7g+eRR1vaGB7eT8in0t7dy/C+QRTp3643Sj3pq01t5pBvgG5PG5ptbJ3qmGSy
      skBQ8hOV3CPBdd2/npO/pK+zz9fdMFZQzwidrCySsnKutbf1Esmx8ixpK88+bw/eBruAV/Cw
      ZqTIWHkCkp82Nd5gfgIlq8KakUIWZHobBLOErTErxiaqqNDnuTd6LAgCWavAupEmKPrp9Ozc
      zGv7+fc1ag/fOgRBoF1t5q3IC/xF7HXalWaKdpn3shc4nb+Cbhuu10qCxGvhZ2lVYmStAqdy
      l7dbsHwZPtHLc01HAbhcvEPV1huOi0oh+r2dGI7J7cqUq21+yN8PwHhlDtvlmUPebgRgTlvG
      clFx6ot+QVt19U+61JpMuqxv7NgH9ovYI8BDhvpb+qexV3m56SkUQWakMsOv06cp7CB5ekSF
      74Vrju6ctsKNkrv0OOzt3SbYzdKE6zyOB/YDMFaeRXcaE7BHbScgekma2e0T6r+MZiVCWGqi
      aJXZMO4VEwDiSpig6KNglchYhYZjOtQWBITt7nT3gz0CfAnrG5v3FSf4tiEKIscC+/hp7FUi
      UhMbZppfp2snLrohJAd5NXQSgMvF26RdxgqCwLNbu8DN8qRrbKBZidKmNFN1dKarSw3HKGKt
      YN/BcR0jCRI9njYcYEFbazwGiTa1BQdY0TcajvGIKnE5jOlYbJqZhmPuue/j5AOY5Qy/+sV/
      5/2Pr9Pe1c3otYtoop9yep2bt64h+JrR9TKRUIiRS2dI4ufi6TMEm1QWZ6YRFZULn1wg0tpB
      anGCa2PzdLbFuXDuNFXBTzxyt0Y9M3qDf373PE8dG+bS2dNc/PQiVcPi3LkL3Lh9m/7hgygi
      5KwiaTOPsbX9S/eR5lxHQPIx5O3eLjaZq67Q6+lwdY7DUnA7Ups2cwz7ehsmowVFf02etXKo
      gtywQa5ArVh/RlumamuuDasUUWasMkfZrrp2kRAQasEuLA76Bu7N+xEENFtnTltBFmSGvN0N
      v1966zimiBS6r3rhx2oHkP1Rvvv6K7z40isYC7eIDp9g5OZlRm/d4fCJ5xm9fp474+MIgGNW
      +Pv/9P9x4rU3GbvyEVawg2uXL/PsC89y8dS7XJtMsj+hcPHjs8wmNfzee53AgYNP0JuIATKd
      XQlKpSpBj4Tg8eETTNbSRTRH559TH/Av6VP8j+Tv+bvN3/HL1Huczl1hXlu9r8imX/Lyw+jL
      dKqtFOwy72TPU7GrDcfW3u5HCIp+VoxNpqoLDceJgsCTgf0IwEh5xtXH6PV04BM9bBiZ7YP4
      vozEVu1Bziq6mi/tSjOyIJEyslRd5t6mNCMisGmkXX2FVqXmaG+4RKC/jMeKAF+E6lXIZbKY
      po3iCxLw+5GkLxg/opef/bufcPnjT/CEWxjubUcSHHK5LI6kYmllcvk8aribF54c5uOzZ770
      BIdqpUSlUqFaLmF7Yrx08iCpqsTJowdQfV7iYT+KoLDf10e70kJEqmVFpswcdyrT/C5zlv+e
      /D3XSmM7OrlQC2a9FXmBVjlGxszzYfaS6yLxiV6eCR4Bao6uYTe2lzvVVprlKAW7zJy20nCM
      R1DoUduxsZl1CUJJiNsO6oLWOKVEEWUSShwLmzWXxRuRa6fmFK0yRavccEzrlmq1aWbvyxF+
      rEwgAMnjIxxuoqWrn8LqDAeOnaSzoxWfz0csGqezvQO/z0cgFKG5tY2e5hCxRDdBv5/enk4m
      J2Z57uWX6Wrxk9K8PHWkn4XZGY48/SxB391mx/TYLUwHbCUA5RQp3cuJJw6wMj9N38GnSURq
      zXR7PO0c9PdzLLCPJ/zD9Hk6aJICVGyNnFVgUV9nsjKPT/QS26FNuSzIdHvamK4usmlmkATJ
      tdFVXA4zp62QsfIEJT+tyr1F/oIg4OAwr62iO0bDCq563fJkdQHDMRtmdgqCgOlYzGhLCODa
      5z9vllgxNgmK/oZavyiILGkbZK0CHWpLw5QHEYnRSi01/KB/YNeA4WNHAFFS8KhKLYEs0U7A
      p+L1+RAAn8+P31fLmVE9XlRJxOv34/f5EYTatR2dHciigDcQoq0lhiBItHV03bP4QaA50UFf
      Xx/xSBPR5gSdba21ZrXtnYQCjbMuJUEkKPnpVFs55OunTW0mZxVIW3lmtCUKdpluNeEa6awf
      fTpZnd9OXW6U4VmLMXiYri6SM4sc9g829AVCUoBbpUlyW8XnjRaUX/RxuzxF0apw0N/fODIs
      yNwp19q01CK190ZzLSwmqvOAsJ0E92VkzDyrxiZhKdgwO1RCZHrr59Tv7dz1hJvH1gR6GCAJ
      Er2edn4We4PvhJ7GIyiMVWb5deYjylZjOxnYOiJpHxY25wpXXfX3Pk8HUSlUOzvYxTTxCLWj
      TndScVSx1qDKxmbZRaFpkgKEtnY1N6WqWY4gIZL+Qunnl9GyVR+cdDFx6qkawI6KWB17BHgI
      IAoCR/xD/EXsNcJSkHUjzdvZs1vnCN8LQRA4GTxEQPTVqr5c7HdZkDi4Fagarczummjmdh+A
      ri2VyI0AgiCQUGtm1obZWOv3iCpNUgDDsciZjZ3l6JbZkzULrnJ1RAptj9kNewR4iBBXamdq
      1UoPM3yQvej6pvSJXp4K1HKdPiuNuu4C+7Zaly/p65Rd1JcOtRVFkNkw0q6kq8ukq3rS1fms
      +xmbRmONXhREInITDo6rohSSAkiIFKwSFo2/ez1lOmcVG35+1zN3HfGQwXEcrn16lnff+4iy
      2fiXXsfq+r1Bl+ufnOF37/yeqcXGb7IHQTG7ySeXrgMW1z89zx/e+4BUapN3f/82//SPv2Kz
      0Hgx7YSg5OeH0ZcIiD4W9DWulkZdxx7yD+AXvWwYadd06KDkp12pVYa5BaECW8637hiuizcs
      BfEKKnmr5B44k2sKTcrIuaZR1x3bjMvbW0SkSQpg47hGvuvVZQWrtKsS9NWbKv6JwrEqjEwu
      85Of/jlmboV/+ugSnnAz/kqSrBRmoEViYSOHP9iBR66QX5tnfGGdpuZuXn3+OCtLOd78y+/z
      0bsfIpXauX5zlH0nXuHGmV+gmwotnX3ITVHEzCpF3eTo0UNcvDbKsSdP8sSBvrvmUqropJIb
      gMj+o08h3/qU1Rx8963v89H7HxDyq9iOzZXiCHmrSERuolNNkFBiO3Y6C0lBXg8/w+8yZ7la
      HGXQ09Wwj6YsSBz2D3K5eIeRykxDpxGg39u51Z1ulQO+e/vrCIJAh9JcO6NYTzZUaBRBJiKH
      WDOSpMwcXQ0c77ptnrOKWNjI3OsIR6Stt7cLAQRqCzxrFShYpYZKUED0ISJStTVMx9q5SYDr
      Jw8pBMnHD7/7Mu/95h+5fPUKKU1E0yo4ko8fff81UrkKf/6j7yIZGpqusbiZ4cc//jHVYgoH
      KGZX+b//9m/pOvAkqVQa7ApT8/O09Qxx9GAvL73yJoXNaZxwH9/9zjNsZqq0hnykUsl75pJo
      78SryIBAdnORlXQJRbbJr07hSQzikQQ0x+BmeZLx6jyfFm/zq/SH/CL1LpOVBewd3l5daoLD
      /iEsbC4Ub7q+6fZ7e5EQmddWXRPbetTagl7S3Ms0E1uZnOtGytVXiG8tRrcCGI+o4he9aI7u
      ukuEtsyXvFVqWPxTb+sOUHCJBfhED5IgUnV0TBczqY5HjgCOU+XKpRvIvigHjj1LwmfTlmin
      pa0NSRToag7z9jvvkavaxKIxDvZ385vf/JaW9j4EoHf/Mf7D//I/s7kwQ6mq4Q1EaImGicWa
      CUWakUWBROcQQWuDDz+5SW9PJ44g3H02WG0m3Lx0jqmpCW6NTjIxPY9uOng9HmaWczx7rNY4
      yiuo/CT2Cq+Hn+GYfx9NUoC0mee93AVO5S65JnUJgsDTgVrt7aK25ppEFpKCtCgxdMdwzaEJ
      Sn5CUoCqo5N1idTG5QgCkLUKWDQ2LesdGdzuUZtPbfG61Sr7RS8iAmW76voCCIg1qdpNCZME
      CY9QO3zQLchXxyNnAomijzd+9MPtf3f+7Gd3fR4IRRCXUzz13HF6W2qR187Bw9ufP/ud5wF4
      9TsvuD7jz5597q5/d3b8sMEogWPPvMyxZ16u/fMLjXN7Eyc/H7VV0N6iRDng6+cF50lGKzNc
      LNxivDqH5uh8L/JCw9bjAcnHQV8/18vjjFRmaFXu7dcjCAK9nnbWjCRL+vq2ovNFiNTameSt
      EhtGpmFrkZAUQBZkilYZwzEbzie8Zb7kTXfns0kKsGakXCO5XtGDJEjotoHpmEjCvTEFn1SL
      ubg57VDbBYp2maqjEcI9FvDI7QC7oXvwED/40Y+3F/+fGiRB5Ih/iJ/GXtlOXf6sOOI6vh4w
      mqkuu76ZO7aqrNb0HcyXrSqxtIv5IgoioS3n023x1gvvi3bF1STzb5VZluxKw889goKIiO6Y
      7gqXUCOAmxkFbBfouJl9dTx2BHhY0KxEeTP8HCIi10rjrpp2RKq1Nqw6mqtCE5PDSEjkrZJr
      3n49Dym/g3RYryd2f3vXulfrtu5KxnqdsdviFQURVVSwsFwJUI80ay7fBWo1wgDGDmNgjwB/
      0uhUW9nv68XC4lZ5quGYmkJT0+DXjHsdcaiZFX7Rg+borjr+bo4lfP72dss0VQQFURAxHAvT
      xXfxbKVSaDsk93m2Fq8bWZX7WNz1U2N2K4zZI8CfMARB4JBvAAGBeW3VNbuzbr7sFPoPbi1w
      N9Oj3li3amuurVe8u7x5ZUFCRMTGdi25VHZZ3LX71BavG4nq/sdOqeL3MwYekACGY+6alruH
      rxctSgyPoFKwSru+vUtW48UN4NvFJq4vXtOxXO33up7upqxIiIiCgO3Y2C4mkLwV33AjCLCd
      6Oc2ZrfPge04ilsEfHvcjp9+AY7j8HbmHP+c/mCPBN8g6sej2thoLotX3X6rum/39exLt12k
      fiSTg4PtsgOIW8vFbXELgoBA7R5uIYz6PXZq8CVutWp3GyPs8vn93KOO+5ZBbWyyZgHN1tEc
      A5Wd86z38PXAcZztResWHa4vyPovveF9tv7c6fwAdlksn3/qfpB2bZTgNuS+Ott9HTXZu821
      jvveAb7Iusewl9a3hopdpWRX8Ahqw5bkUDt1BXD9HNjetdUGvTyhZk7YjoOIiOSyLOr2tNvh
      1PXdQ0BwJWPdJNmpc9s2oXcl/H3c4+skgEh9i9zZrtrD14d6XXCLEsHTICgEn0dedyr+KG85
      v43aHULNv7OxUUXFteKs7riqLrk1lmPjOA6SILouTmMXEtXuszWmQa7QXZ/vcI/7IRo8CAEE
      AVmQsXF2dSz28PVAtw2ulcYAXA+RcByH9a00CLcDqGstFkuICNtpBF9GXR1y+xw+lz/dOk4Y
      joGFjSRIrovzcxK5m9D6lpPdqPN07Tm7E6Auf+52iPYDqUD1CRncX9OhPXx1OI7DJ4UbZKwC
      cTns2gbExNpOdXZrA5K3ShiOSUDyux6PWg+ANTqooo7SlqnlRhLNMbEcC2UHAtQDYG7zcHDQ
      HB0BwTWLsy4G7FTvWyfATpmg8IC5QPUAxU5BjD388dBtg08KN7hTmUYRZF4NP+N60stcdQXd
      MbZbjzTChpHGxiEuh13t+7RRiyG4HTHk4OxKkopdxcapJbS5mB71/B2/iylmOtZ2CrMbiTSn
      RgCvi0kIn5PEjWh1PBAB6lvfTjkYe9gdlmMzVV0gLDXRokSRBBHHcSjbVea1Va6XxshYBRRB
      5o3wc7TKbqaNw+2tCPF+X+Mji4Dt44M61BZXMyq51UktLt9bVwA1UlbsKh5BdTWB6gUqwR18
      kd1MLc3WsRx7K62i8fKsx0N26oxd3R7zNRKgrjK4hcL3cH9Y0Tf5IPcpAgIeQUUWJGxsdMfY
      VlricphXw8/QqkRdpcsF7f9v7z2727izdN9fJRQSATBIFKMkKlHBypbasiWn7nYHn+6ZM+vM
      3I8zX+S+u2udNDPd5/R0t90Oasu2oiVZgQpUICmKmQSRK9f/vigAkiUUGETbkqVnLb8SCMCF
      2vXf+9l7P88UU848cTnKtmh/w9c4vsNDawaJwPK04WuEy4KbR+KRrs6TyLoFfER9KrQRavNK
      taWWRii4QZCEFeyGb+HjBQEQcgLUxqDjIUEkhMDwrfr1bYYVBcCjSb5XAfAs2BBpZ398ByPW
      JEWvjCmqebEUoTPSzs7YZrZE+5oWebU0SSCa+gRM2HOU/Aptajr06T7jLOAIl3Vqa2hxOlct
      tDu0TEP5FHg0SRqWRvnCp+CVkJFC06iiV0YQDN6FnWhFP5hXSobYPtnCwREeuqQ1vYawwgBY
      ahrwFZYHTVJ5M7Wfn4nXMHwLw7dQJIW4rKNLkSV1QQW1ArlAu5pmT3xr6GuHjHsADUWtahir
      SqL06Z2hr6mptXVqT2v8Q5DW1cR220M8uoJFdr/pKVJbZE+HnCJCPBrHDjtFKr6Jj48ux9Y2
      AB6fGBRCNLxYlm9z2xhlINobasfzCgEUSSGpxFd0nYQQfFu5zZBxj4ik8n76aOiPvODkGLUm
      0SSVwdjmhq/xhM+IFUgabtaftjGCYCht2p5HRmKD9rSDCwQ5d94r1XeDG2G+dkIoqdAGVT2N
      amCeDd8txlMhAVDyDASChBJr2iyDFdKgtQ8seZXQZth9c4Ivi5fr/PUrrB0Ewc1/pngVCYkT
      qUN0NFiGhyBQzpeGANgZ2xzaJZ6y5yh6ZTJKCx1N8v+iXyGpxENvzFkn8AJbr7WFNp/mq/sK
      HVomtBjPPhYkjWAJB8O3mhbjjwfIUqfpik6AhBxDRaHsGzjCbUjN1baC5p1c6CnxCivH49So
      hMTx1IHArDqsQLanGbEm0KUI+xODoTfcDeM+gkf6QI0wagaCWP2RDaE398PHmKZGEIi6Z3Aj
      HVIIivG8V0JBDq0jaiPfGTW55CmSVpbe+ltRANS8oebdHHm3RDTydARmlCQKMnmvtKQkxSss
      DV8IHlhTnC5dYdEtEJFUTqQOhTq1Q5CGflW4jEBwMDEYWnAWvDIj1gQKMoMhgrW+ENwzxwEa
      7hNDEEjjVUWJ3jCmyXeZd3MoKHV9oCdR9CsYvkWLEg/tEyw4gctMM5HgmqhWWBA9jhXfnW1q
      mnk3x4Kbr0tlPI5ktdtY8U0qvklaDqfEXhbk3CKf58/TqbWzMz5Aq9LS9GQUQuDiMWpOcr1y
      lylnHlFtZL2fPhqkEE0mMr8ufkvOK9KhZtiX2B76OVcrw7jCY1u0vy5H8iTmnEWyXoGEHA19
      uue8InmvSFyO0hHCNGXdPIZv0aqkQtmbWbt2QrSHXp+azVLY53gimFqWkOprns2w4gAIqLSx
      euPkSciSTIea4YE9zZy72NDZ+2VD2TeYcbJMOfN8W7lNm5qmW1tHu5amRUmgSgpCCEzfIucV
      mXayTNlz9bmZuBzlQGKQPfGtTVkNIQTXKne4aYwQkTTeTx8N7SAX3BI3KveRkTmYGAx9zxtV
      FmlbdGPoe42Yk/gIeiOdoeMJtRSpJ7I+tEs8WV3p7AoptL8799Q4jTJ9NuKg5gAAIABJREFU
      i5JnEJFUUmpzZWhYRQDUiq55p7HhGQRU2QN7mhl7IXSG5WVCt7aO/9r+Hjcq97lvTpB180Gx
      F77ABQTXcUdsY9WGtLkfMMB96yGni1eQgBOpg039gM+VruHisT26MbQ/UPEM7pnjyE1TJJ/7
      1tIpUk12sS9EnU4g6jNNjbyCIWiSFbwSuqSFFuOLbgEPjw41vaz0exUnQKAwsODmcXy34cTe
      hkgHlGHKmXtVCFNVRtbaWZ9q43jqIHPOItPOPItugbJnUPIrqJJKUg4EqtZprXRH1pGQY8u6
      dkII7lsP+SR3Fg+fI8k9SxbId8xxIpLGkeSexgUyQYFsCYeNeldDCUKoeXItEpP10E5zcAIu
      oKDQF3laVhEg75YoemUSciw0d593czjCpVNrD50Dqp0QYYX2k1hxAMRknbSaYNEtkPXydMpP
      1wHrtTYUFOacRRzhNh19fZkgSRIqCl2RjtCn3EpRS3tOF6/g4XMgvoNDiZ1NC+RThYsIBIcS
      O0NTVMu360oU++M7Qt/vljGKQDCg94amP6NWkCJt0jtDU7hxexqBoCvSEboHUD8hQlxvgDrT
      FNawexIrVoWQJZn1WjuCQGipEXRJY53Wiv/YsfYKaw/LtzlZuMCXxcv41Sf/z1r2hubYQgi+
      LFym4JXp1NqaFsjXKnep+Cbd2jp6GjhEQsDs3DJGAUIdXYQQ3DECI76t0b5QOnbUDLrRG/Wu
      0NdMPFZHhH1WTRomrGH3JFYli9KtBWzAZIgjtyRJj0zR7MaS26+weggR+Hb928Kn3yl4Dyd2
      Nb35r1XucNscRZcivJsKH7EuemW+Ld9GQuJIS+MUCeCWMYIlbLq0daHUZlDUL6BLEfr1roav
      MXyTaWceVVJCaVTDN5lzFlFRQtmorFvA8C1SSmLZ3fVVkfRdkcCucsbJhnL9/Xon35SHGLem
      8YXfVO77pwRXeFwoXSepJNgZ27zkLMpKMe/kuFAaYsSaQCDoUDO8nz5Ku5ZuuvA+bk9zungV
      gONLFcjF69jCYUDvpUtrfLO5wuVa5Q4AexPbQgfkho0xfHw26V2hefu4PYMtHHoi60PHpB/a
      s3j4TZmm2glRs1NdDlYVAGklSYuSIO+VWHBzQdH7BNZprSTlePU1+dB1vZ8ayp7Bt+Xb+Ai+
      KQ2xO76FHdGNpJTkqskAx3eYsOcYMu7VbYp0KcLBxCD7EttDn+Q1TNnzfJw7g4fHocQutoeM
      TgOM2VMMm2NEJI1jLftCb+w7xoP6ttomvbvha2zf4bYxigTsjD9tfg1BwA0bY0DQjQ67RrV5
      pbDPgkfZRp++YdnXelUBIEkS/foGrlXu8sCabhgAgWVnJzeNEUatyZcmAFJKgl9l3uSb8g1m
      nSwXSkNcKt1kndbGRr2L7kgHbWq6Ka0ZjA2XmXWyjNszPLRmKFVHgDVJZWdsM/sTO5Z0QITg
      5v9r7its4TAY28Tryd2hN4fp25zKL10gO8LlYtWZ5kBiMHyEwpqk6FdoVzOhJ0nZN3loz6Ag
      hw7j2b7DuDWDTKB0HfbdZ+yFIEVaZv4PzyCPvlHv5lrlLiPWZOhF3Rrt46Yxwj3zIYcSO1+K
      NEiSJDZHe9iodzFlzzNk3GPMmmLama8XaArB6HOLkiAqR+rXxfYdKr5JsbrDWxOoqlkH7Yhu
      ZLA62LbkyLQQjNvTfJw7jS1ctkX7eTt1OHSWxxc+pwoXKfoVurSOpgXy9cpd8l6JdjUduogj
      hODb8m0A9sbDU6Tbxig+ggG9J3Rgb9yexhI2nVp76ATotD2PKWzWa23LejDUsOoA6NI6iEoR
      FtwcBa/c8GnRE+kkKussVEcnXpZTAAK2rEdfT4++HtO3mbRnGbdnmLEXKHhlin6lvtjx1N8i
      k1DitKtpuiPr6It0BgYVyzzWH1GjV/HwGIxt4u3U4XA9HyG4VrnLHfMBUSnCu+nXQ9Oqklfh
      UukmEjRlnGqTAEk5HtoM9YTHLWMECFiksBSpxiJtifY1/DwhxHdSpJWkmqsOAE1S6dU7uWuO
      M2JNsF/d8dRrFElmq97HdeMuw8bYSxUAjyMqRxiI9jIQ7UUIgV0d6S37BqZvY/k2qqSgyxox
      OUpCjqHLERTkFdcNlm/zZeEyt81RAA4ldvF6cndTfZyH9ixnilcAeDt1KHwxXgjOFq9iCpvN
      ek/dWulJ+MKvexrsTWwLLVofWNPkvCIZpSWU2qz4JuPVFGlLSIrk4TNWrY0G9Mbd6DCsOgAk
      SWJrtI+75jh3zXH2xrc3POYGY5sYMu4ybI5xpGXPSz8dKknBnqouR8iwdiYdQgge2NOcKlyq
      jgtEOJ46yPYmhSUEM/p/y53Gw+dgYidbmoyujFqT9QL5zZb9oU//UWuSKWeepBxjV6xxf8AX
      gqtVFml3fEvo6XTXHMcWDv2RDaEDe5P2LGXfpFVJ1Y34lotnuht7I51EJZ05Z5GcV2jYLu/Q
      WulQW5lzFxk1J9kWC2cgXjQIIRi1JnGFx5Zo749W4xTcEudK17ljPkAg6NTaeDd1JJTqrCHn
      FvlL7mtMYbM12seRJgWy4VvVDjK8ntwdWiB7wuNc6ToA+xODobIkc06WCXuWiKSFbqsJIbhp
      3AcCFikMd8wgRdoWax7sjfBMAaDLETZFu7lljDBsPOBog7kSRZLZFR/gi8JFhox7P+qNstZw
      hMsXhYuUfYOOcoZDyZ1s0nvWnPtvBCEEBa/M1cowNyr3cfGISBqHEjuXRY3m3CJ/WvyColem
      N9LJe020h3zh8/f8N5R8g57Iel6Lb2v4OoChyj2ybp6M0sLu+JbQ736xfBOBYE98S6h0yaQz
      x4KbJynH2RTK/liMmBPIyKsavHzmfGQwtikIAHMsyDUbNCC2Rfs5V7zGpD3HnJujc5mDSs87
      NEnlrdQBzhavMu/m+Dh3hlYlxc74ZrZF+7+XnWhP+EzZc9ww7jNiTeAKDxmJ7dGNHEnuWdb4
      +byzyF9yX1P0ynRr6/ggcyw0NRXVVOW+9ZCopPNOEyap5FX4pnwDCXijZW/og2DWWWTUmiQi
      aewJCSYhBFfLwwDVhmLj73ffnMASDt2Rdcua/38SzxwAXVoHGaWFnFdk3J5u2KjQ5Qg7Ypu4
      UhnmanmYX2R+1uCdXjzU6qCNkS5um6NcKQ+z6BU4XbzC+dJ1urR1bI4GxWJSiSNXNfhXAiEE
      jnCZcRYYs6YYsSbq0iEKMtui/RxMDC6LJRJC8NCe5W+505jCpjfSyQeZY03Foybs2eoOMryT
      PhS+rC4EZ4pXMXyLTXp3aMPKF4JvytcRCHbFBkiGdH4XvQJj1lTQ94g3TpF84ddZpJ0h2qlL
      4ZkDQK6mOKeLV7heucvGSONhptfi2xiq3OOuOc4RdzfpkAsJgeBTzi2xJ77lhUiXNFllT3wr
      O2MDjFlT3DJGeGjPMG5PM17tTqaUBB1qK+1amozSUu8BqJKCJ/z6GIMjHMq+ScErkXULzDs5
      FqpjwDVklBa2xfoZjG4KLQyfhC98rlXucqY6Nbol2sf76SNNSYmsm+dv+bP4+BxK7GzKsIxY
      E9UCWeWtlgOhv9tDe4Yxa5qoFGF/ovGUqRCCK+VhPHx2RDeF8vrBWPkCMVlfMftTw5pQMtui
      /XxTusFDa4ZFr9iwEk8pCbZE+7htjnK5fJt30ocbvldtFmXWzRKT9ReqaFYkmYFoD5v17oC+
      s6YZtaeYsGYoeGUKXpn71sP66wPJeRmBT83IoZHahgSsU1vp0zvZrPfQobWuqM4wqyPQtWLx
      YGInR5K7m9YJZc/gr4tfY/gmm/Weph3kimdyqnAJgCPJ10LTMF8IzlTFvPYldtQFFJ5E0a8w
      bIwhAfsTT9PrNQwZ9xAItkc3NhXKbYY1CYCEHGNrtI8bxn2ule9wInWwoWHzwcQgd81xbpuj
      7Etsb8g3S5LE7vgAs4UsZ0tX6dc3LClw+rxBkiQSSozB+GZ2VDepcl6RWWeRrJsn75YCE2ff
      whUePn49GHRZIy7HaFHitKop2tUM67VAsW016dOYNcUXhYuU/ApRKcKJ1KHQseQaDN/kPxdP
      kfOKdGrt/LzJaqUnfE4WLlD2DfojG5qLdFXuMu/mSCtJ9sXDO82XSjfr22pheX3JC4JEQW76
      mUthTQJAkiRei2/jZrUYPpzc1TC6W7UUW6unwKXyTd5LHWn4Q+yIbWbIuM+sk+Vi+SbHWvat
      xddcE7jCW1GDqva6VjX1VMALBL4I/BYkSVpV4ysMRa/CueJVhqvUaJfWwbvp15dUSjB8k78s
      fsW8m6NNTfPrzJtNn65XK8OMWpPEZJ23080L5AvloXoHOUz7f9EtcNsYRUHhYIicCwT7Ch4+
      W/TeUBW55WDNEux2Nc1GvQtbOHXF4ichIVWZIpnbxlh9w/9JKJLM8ZaDyMhcKQ8zW11zWyvU
      RgWGjbEV2T0VvTL/39yf+UP2JBP2LP4zWkVJSCiSjCYHUuDPevMLgsX6C6Uh/sf8R9w2x9Ak
      lTeS+/h92ztL3vxlz+D/Zr9g2lkgo7TwYevx0DQFYNya4WxVpOvd1Ouhczo1pQrDt9iod4fm
      64GY1/Xg6R/rD13DrHgmN437SEjsC6kjlos1CwBJkjiQGERC4nrlbqilZ0pJsCe+FUHAGoS5
      zXRqbeyNb8Mn4KDDrDlXA1u4nCle5dP8Wc6Vri3b8UZGRpFkppw5/pg9yZ8XT9X3HX5sVDyD
      b0o3+O/zH3G+dB1HuAzovfxz+y84mBxcsi+QdfP8n+zJ+pP/d21vNx0qW3QLfJo/i4/gYGJn
      0zHle9VpgYikBg+2kBt2ypnjnvkQTVI5HFJzCCEYMu5h+BY9kfVsWObqYxiUf/3Xf/3XZ3qH
      x5CQY0w7C2S9PAoyPZH1DWuBdjXDsDlG1s3RrmUaRnqwSN7GiDnBgpdHAL0N3m81UCSZuBxl
      zJpm0pmj4JXpi3QueZNEZI0dsU2oVVGArJdn2BxjtCoum1ISKDz7k3y58IVg1lnkQuk6pwoX
      eWBP4wiXbm0d72eOsD8xSExpriYRrBrO8ufclxT9Cp1aOx+2Hm/awzB8i/9c/JKCV2az3sOJ
      1MFQ1qfkVfhr7msc4fJm6gB9kcYCvL7w+Th3hrJvcDAxyJYQhQlL2HyaO4uLx3vpI8tmwcKw
      pgEgSRItSoLbxigLbp4dscbVeUTW0CSVUWuKWSfLYGxTQ1ZDlRQ6tFZuG2NMOfN0RTrWRGdI
      QqJDy7BObWXcmmbGzTJuTdMTWb+k/IgqKfTo69kVHyAiqeTdEotekVFrkmvlO8y7OXwEUVlH
      k9Q1DwZXBAprQ5V7fFm8xMXyTebcRQTQr2/gndRhjiT3kFKXXsDxhc/Vyh0+y5/HES6b9R5+
      nXmzadBYvsNfF79i1s3SoWb4bevx0HzeEx6f5M4y7+bYpHdXF2waB8p14y43jPuklATvp38W
      ynJdKN1g3J6hL9LJ4cSuZ76+klhjz1MhBH/JfcWoNcne+DbeajnQ8Et6wuc/sp8y6yxyILGD
      Yy37Q9/vQmmIC+UhknKcf2p/f007rPNOjo9zp8l5RWKyzvGWg0uyJI/D9h3GrEluGCNM2LN1
      H1xNUmlT03RFOtigtdOuZkgpiRX1NQQC23fIugXmnCzTzgJT9jxlv1L3wU3IUbZFNzIY29RU
      LvBJGL7F3/PfcN96iAQcWAY16giXv+XOMGpNklIS/L713abiUxdLNzhbukZcjvLf2n8R+rsV
      vTL/e+ETTN/il+k32BpCfRe8Mv9z/mNc4fIPbe/SFbIbvBKseQBAoN/4vxY+AQT/0vGr0Am9
      GXuBP2Q/RyD4x7b32dBAahEC5uUvi18ybs/QG+nkt63Hl8WDzzpZZGTal7gxTN/ii8JF7lY1
      MHdEN3KsZT9xpbE+ZSMIISj7BvfMh4xak8w62bqyGwRcviqptCiJuvalLkWIyGrVWlrCE4FL
      TE3drOCV6r5bNchIJJU4fZENbIn20h1ZhyzJSxhgf/d7jlqTnCpcpOQbwXhD+jADek/Ta+QI
      l09yZxixJknIMX7X9k7TycsH1jR/XjwFwG9aj4ducgkh+Ch3mvvWw/oJFJb7f164wC1jhK3R
      Pn6ZfmNNTtfvJQCEEPXht016N7/OvNWw8BFCcKZ0lcvlW3SoGf6x7b1Qyq3kVfi3hU8p+0bT
      k6UGX/j8v7N/RCD4efpoqGrZo9cLhoy7nC1ewxYOSTnOGy17m+6pNoPhW0Gn0p5nxsmS8wpV
      WfmVXW5digRdZC1Dp9bOBq2DjNqypP9tI5S8CmeLVxk2xxAE8iLvpA6HjjfUYPsOn+TPMmpN
      EpejfNh6oulux6Jb4I/Zk1R8k8OJXaHiWxAszX+SP4suafxLxwehhfe0Pc8fsp8jIfP/dHyw
      5HdeLr6XAIDgYv+vhb9h+hYfZN4MLWps3+Hfs5+RdfPsj+/gWMu+0Is1ac/yp8VTeMLjROoQ
      u2NbQl9bo96uVIZRkHk7dZjB2KYlRWlzXpEvCheZsGeBYOT7jZa9rFNbV/3EEULg4eMIl5JX
      oeRVMHwTSzg4vovhm6iSii5rRCSNqKyTqDbDorKOKqmhzMly4AiX65W7XCrdxBQ2EUnj9eRu
      XotvWzKQDN/io8WvmXTmSMgxftt6vKk4r+nb/DH7OQtuns16Dx9kjoV+RsEt8W/ZTzF8i3dS
      h9kVa7wV5guf/8h+zoyzwMHEIG+sYV/oewsAgGvlO5wqXiKlJPjn9l+GdnSn7QX+mP0cH5/f
      tp4IPS4Bblbuc7LwDTISv8wcY3OTFThf+FwoDdUXuA8ndzXVznn8724aI1woDVH2DSQktkf7
      OZjYSauaemGkHl3hcsd4wMXyTfJeCQnYpPfwZsu+prNYNSy6BT7KnSbr5kkpCX7beqJp2uP4
      Ln/Nfc24PU27muEf294N/c094fGfi1/y0J5hoBooYb/LtcodThWC++i/tf9ySefHlWBNWaAn
      sU5rZcyaYtEr4AtBv954ha6mgfnQnmXCnmVrtC80FepQM/gIJpxZxqxJeiPrQ4srSZKqzE6E
      B/Y0E/YsRa+yJOUpSRLrtTZ2RDfiI5hzFplzc9wyRsh6BVJKkrgcfW4DwfFdblTu8Xn+AjfN
      QLyqXU3zXvoIhxI7iS2jtnlozfCX3FcUvDIdaisftp5omnb41ZGIEWuChBzjw9YTTcmKi+Wb
      3DRGiMtRftN6PDRQil6Zv+XP4gqPt1OH6Yys7Sj993oCQK3QPYlA8Pu2d0JVvTzh89fFrxiz
      p+jW1vFf2t5uusT998I33DDuE5UifNh2oqkWZK3w+zx/HlPYdKgZfpF5Y1nrc0IIin6Fi6Ub
      3DEf1KcyN2gd7IlvYaPejb6KOZ21hi98sm6eW8Yot4zRupl0u5rmQGKQbdH+ZTFQnvC5Whnm
      bPEqPoLNeg8/Tx9tOg7hC58vChe5YdxHlyL8vu2dpjXCmDXJnxe/QkLiw9bj9IU8GB9nFAf0
      Hn4VUiA/C773ABBCcLZ0jUvlm7Spaf6p7f3Qi1nxDP73wieUllHousLjs/w57prjyyrMIGCn
      Ps6dYdErEJUivFWzGVqmAnPBK3PduMutyghm9QaLyTr9kS62Rvvojqxb9VTialCrWUasSe6b
      48w6i3UatkvrYG9iO5v07mVPjlY8k5OFC4xak0hIHEzs5PXkrqanpS98vi5+y9XKHTRJ5TeZ
      t+gNkUCH7xbIR5J7mnL5t4xRPsufIypF+OeOX65I7mS5+N4DAIIi7N8XPmPBzfFafCvHW56e
      Fq1h0p57otBtXBhBEAQf507Xh7F+kzlOp9a2JOV5qnDp0R5ptJ+3Wg4sm/KsqTrcMx9y07jP
      rLNYH2GOSBrdkXX0RtbTHVlPWkmuaTPMEz6mbzHrZHlozzJuT5N3i3VmqTYXvys+QIfauuzC
      OZBXn+DLwiXKvkFM1nk39fqSEiOPP/k1SeWDzDH6I+GqbJZv84dqgbxU3p9zi/z7wqeYwua9
      9BEGo80JjNXiBwkACDj5P2Q/xxM+v868yeZoY4kLgBuV+/y9cAEZhV+3vtm0KHZ8l0/z57hv
      PUSXInyQeSP0SK2htmx9ungFSzgk5BhvtOyrpgnLv8hCCBa9AvfNCUasCead3Hfm+aNShIya
      ol1N06qmSCtJkkogeaJVTZxrE6BCCAQCT3g4wsUWbl0kK+cWq6YaBfJeqf6Uh8A9pjfSyUC0
      l74muplhKHkVzlSpUQiM8N5OHVpyxMARLn/Pf8NwdeDug8yxpr+TKzw+yp1mzJqkXU3zD23v
      hRazrvD4U/YLJp05tkb7+EX6Z9/bYtQPFgBCCC6Xb3OmdIW4HOWf2n/edHqw1h/QpQj/0PZO
      qIUnBBfsZP4Cw+YYKgrvpY8s2c0VQpD3SnxRuFi37+mPbOBYy37aVsH0+MKn7BtM2LNM2HNM
      2cGMkWjA+6soyJKMjPydgKuPR+PjCa9hzyAiqazT2qonTScdamZVaZcnfIYqd/mmfAPDt9Ak
      laPJ19gT37okNWr6Nn/LnWHcnkaXIvwqc6zh3FcNvhCcqvaF4nKUf2h7t6n20PnSdb4p3yAh
      x/iXjg9CFePWAj9YAEBwk/w19zWj1iRdWge/a3snND/1hc9n+fMMm2Mkq53HZuO8vvA5XbzC
      lcpwIOud3M3BZcgx1qxCz5euU/FNZGR2xQY4mNxJUoktu8Pa6H1N32LBzbPg5sl5RQpuiZJv
      YPl2fRHGFz7eYwsxiiSjSAqapBCTo6SUBGklWV2OSZNRU6tqgtXgC59Ra5Jzpetk3TwSgczl
      Wy0HljVntegW+Dh3mgU3X+8LNKu9anZMF8s30SSV37W+E9rxBxgxJ/go93W1QD7RtJ5YC/yg
      AQBBofVv2U8oepUlC93HeeW0kuT3be80LYQCsaXbnC5era/KvZ06tKwnZNkz+KY0xA1jBB8f
      XYqwKz7A/vh24k1m4leKWlPMFS6e8OtBICHVTwVVUlAlZU2P/Zpw1sXSDaaqGqUZpYU3Wvay
      Se9e1mc9sKb4LH+eim/Srmb4VeZYU2pUCMGl8i3Ola4iI/PLzBtsbjJykXOL/Ef2Mwzf4mjy
      taZON2uFHzwABIJpe4E/LX6BK1zebtIBhKBT/KfFU0w782SUFv5L69tNB7BqOpEn8xcwq/z3
      L9I/oz3EUf3Jv826Bc6XrtVtfTRJZUd0E68lttKqvDhNsBps32HUmuTb8m3mqs6eSTnG/sRg
      U0W2x+EJj2/Ltzlful6nRt9PH2m6qhqkvLc4U73530u/vqS38aMCuZcPMm/8IIIIP3gA1HCj
      cp+ThQuoKPym9XioeyAEa3p/XvyKmfqm0oklj+sFJ8/f8mfIuvm6lN9gbPOyitzAjnOBy+Vb
      jFiTCAQyMn16Jztjm+mPdIWOAD8PqNGjw8YYt4zRurR6Uo6zN7GNXbGBZe9Zl7wKJ/MXeGBP
      I1ep0cNLaI3WnvxnS1eRkQI2L0QkC4IA+zh3hhFrologv7ssV8y1wI8WAEIIThev8G3lNlFZ
      5x/b3g1dgYNgJuXPi6eYcbLVtvzxpq+Hp4ViB/Re3k4dWhHlueDmuVa5850mWEKOslnvYWus
      n06tfU13eVeL2jTqqDXJHeMB085Cddk+MDffG9/etMPe6P3umeN8WbxMxTeJy1HeS79Of4js
      TQ2+EJyv9n0kZE6kDjY94YUQfFW8zNXKnSUL5O8DP1oAQG1h4hz3rHHSSpLftb0TygxBwOF/
      lDvNhD1LXI7yQeZYU8dACC7wbXOUrwvfYgqbuBzlWJ3yXP4Ra3gmw+YDbhujzLu5OruTkGP0
      Rjrp1zewQWunRUn8IMEgEDi+S9bN89Ce4YE1zYyzUGeOdCnCJr2LnfEBurR1K6J3i16F08Vv
      6+Phm/Ru3k4dWnIPwxUeXxUuM2TcQ0Hm3fTrdVWMhv8Pj6VJqqTwYeuJUJXo7ws/agDAd3P8
      5Rx/lu/waXU0V5NU3k8fDZ00rSHo4pb4onCpLlTVH+nirdT+FT9tfOEz7+a4Zz7knjlO3ivV
      /01BIaUm6NTaWK+10aG20qam1kTWxReColdi3s0z5ywy4yyw4Oa+s3utoNCnd7I12kd/1ZNr
      JcHoC8H1yl2+KQ9h+BYRSeVnLfvYHRtY8mFh+Taf5s/Vf5efp482LXhr7NupwkUA3k8fXfXo
      +bPgRw8ACNKb/5M9yYKbp1Nr57etx5tyv57w+bJwiSHj3oopz5vGCOdK16j4Jgoyr8W3cTAx
      uKwBsUbvl/OKjFlTjFuBIUQjMYB4lc5MKgkScpSYHEWvroWqkoLp20TlCL4QuMKrL8VUfJOy
      Z1RFtUp4T4hmKSiklAQ9+nr6Ip30RTasSl3Cr1qQni5eYd7N1anR4y0HaVHiS77f49RoXI7y
      68xbTTvygsAX7PP8eQRwvOUAe+Jbf5Q08rkIAAjW3f6U/YKcV6RbW8dvWt9q+uT0hc+35WHO
      lgLKM7AAOrSsp23ZMzhfus4tYwQfQVyOsi++nT3xrc80y2P7DotugVk3G4hgOXnyXqk+mPYs
      qG2CtSopOrRM/YRJKrFVsyVCCObcRS6UhhizphAI0kqSn7XsZUDvXVbaNGZN8nn+QpUaTfNB
      5ljTU1UguGuM81n+XN3Vfi12e1eL5yYAIFiQ+OPi3yl6Zbq0Dn7d+lbTk+BJyrNNTfPz9NFl
      OdEIIZh1FzlbvMqEPYMgyOf3J3YwGNu8JjPnNc7f9K3AFsmrUPENTN/C8h0c4eIKDw+v3gRT
      JaW+FBOrL8YEa5SqpK5KYPdJ+EIwVxUdG62yXFEpwr7EDvbFty+L4fKEx6XyLS6UhhBVavS9
      9JGm100IwbA5xsn8BTx8Did28XpyzzMt+zwrnqsAgKAZ8p+Lp8h7JdZrbfwm81ZTcSYING1q
      6gOapHKsZR+7lpG3QlU+0J7iYukG084CEAyV7YoNsDM2QOoHKmp/CHjC44E1zdXKnfoCf0TS
      2BUbYH8Trc4nUXDLnCxc4KE9g4zM4eSuJU0QH8/5fcSSq5I/FJ6jJuRaAAAKgklEQVS7AIDg
      JPhTVZuyVU3xYeb4ksNZlu/wdfEyN6ty2Zv1bt5OHV72j+oJn3Frmkvlm/VOqYrCxmgXu2ID
      9EQ6n2kE4cdCjR69bYxxyxgh5xUBqtr8W9gT30ayupC0nPe6Yz7gq+JlDN8iLsf4efoIvSFa
      P4//3eXyLc6VrtUdZg4ldv2oT/4anssAgCBP/0vuK2adLEk5xgeZN5ccdRZCcNcc58viJQzf
      IirpvJnax/boxmXnyUIIpp0FrlaGGbOm6tx/Uo6zLdrHllgfHWpmSRGtHxNCCIyqudywMcZD
      e6ZOj9acW1aa5hW9Cl8VLtfVrQf0Hk6kDi35gPGEx+niFa5W7iAj8daPWPA2wnMbABCwQ5/k
      zjJuTxORNN5PH1lS3UEgKLplThUvMVZVbOuPdHE8tZ/MCihPIQQlv8JtY4zbxmj9ySkBaaWF
      fn0DG/VuurSO56IrLBDk3RLj9jSj5iTTzkJdlkVBZpPezc74AD2R9SuSVveFz1DlHheq1Kgu
      abzRso+dsc3LokY/y59nxJpAlRTeTb3+o1CdzfBcBwAEzZUvChe5ZYwgI/F6cg8HEoNLpiNC
      CG6Zo5wtXqXim6go7E1s52AT47Yw+MJnxslyx3zAqDVB0Xvk76tKCp1aO93aOjZEAgGsmvn1
      aidJl0LNNabkV5ixF5h05pms7jvXGnS177U12seA3rssc+0nP2PKmePr4pW6OPFmvYfjqQMk
      5aWp0Zxb5KPc1yy4eWJylA8yb9CtrXuubn54AQIAapTn7UDIFsHWaB9vpw4v6wgvewbnSte4
      ZYwiELTIcQ4ldwUan6tIY1zhMedkGbMC95cFJ/cdfl5BpkVJkFFbaFPTZJQkKTVYoo/JOhFJ
      W15xTtATMH0b07coehXyXrG+HJP3Sk/1HBJyjA2RDjbpXfRGOutiAyvFolvgfOk698yHCAQp
      JcHPknuXpZhX278+WbiA4VvLokZ/TLwQAQBPL7a3qSneTx9dll5PkNfPc7p4lelqgdumpjmc
      2MVAtGfV+bxfzbVnqpKFte6sI7ynFmFkJBRJQUYmImvokoYqqajVk0IQBLqLh+O7WCLYGfCE
      j4f31GcryMSVGOvVNroiHXRFOmhVU6irFOd9fPl/2BjDxUOTVPbFt1ftTpfuj7jC42LpBpfK
      N/ERDOi9vJs+/IMNtq0GL0wA1LDoFvg0d45ZN4uKwhste9m9jC0mCG7Yu+YDLpZvkHULQBAI
      BxKDbNF71ySXd4VH3i2y6BVYdIvk3SIFr0zFN6vcv/NUR7cRJCQ0SUGTNKJyhKQSJ60kyagt
      tCqB2cZaSLPU1jqvlIfrN76CwvZYP4eTu5vOZj2OnFvkZP4Ck84cCjKHk7s5mBh87j3eXrgA
      gKDjerp4hSHjHgAb9S7eSR1etmiuUxeMukHBKwOBtPnu2BZ2xgfWfAWvturoVhtftXGHR0sx
      AonAcFBFQZPV+piEytqYZzz1nYRg0pnjavkOY9YUHh4SEtui/RxIDC6pp/r4+9w2x/i6cBlT
      2CTkGD9PH226Ivk84YUMAHjUBf6icJGKb6JLEd5s2ceO2KZlN8B8Al77Svl23a1GRWFLtI9d
      8c3BqPNzTHeuFEIIKr7JXXOcm8Z9Ftw8EChZb4v2sz+xg4zSsuwbt+iVOVW4xKg1CcDWaB8n
      Uoe+1x3etcYLGwA1FL0yXxYuM2JNANAX2cDx1IEVFV2e8Hhoz3KtcidwfKnm761Kim2xPgai
      fbS9gNtgNdi+w7g9zR3jAeP2TJ0eTcpxdsY2szO+eUWaO77wGTLucb40hOlbRKUIx1L72bGC
      fsvzghc+ACDI7YfNMc4Ur1DxzXrxdiAxuKLhtppSxK2q2V+N7pSQaFNTbNZ72KR3066lf1An
      mJWi1gh7aM8yYk0wbs3UB/Jqzj074wNs0rtCHdjD3nfGWeCr4rfMVMdGBvQe3lomNfo84icR
      ADU8SXmmlCRHk3vYEu1b8RiDKzym7DmGzTEeWNNUfLP+b0k5Tleko+pRFbjWrIZSXSsEN7zF
      vJtjsqqvOucs1ottGYl1Whtbor1s0XtXZStU8MpcKF1n2BjDXyE1+jzjJxUA8Ki4+7rwbX0J
      vFNr52hyz5IzK2Hv5wiXaWeeEWuSB9YURa9cJzllJKKyTofayjqtlXVVz7MWJYGMjARrdoPU
      xLMsEYxdL7g55pwcs06Wglf6jpu8isKGSDub9B426l0rdqepfZ4lbC6Xb3O9chdbOCgo7Ets
      40Bi55qqNP9Y+MkFQA2+8LlljH6H6emJrOdwYlfdVWU1CGjDIpP2LA/tWWadLOUGxhe1hlht
      lDkhx4gpwYizLgXKcFpV+qTWMQ4EsQIfAdu3MYWN4VtUPJOiH/gKFLwyxmOnUQ26pJFRU3Rp
      wcn0rDqlFc9kyLjH1fIwprCRkRiI9nI0+dqamVM8D/jJBkANlm8zVLnH5fItTGEjAV3aOvYn
      drBR73rmos0VHmWvwpybY95ZZN7NkXOLFL3yit1glgtdilQ7zSk61AzrtDYyasuKVyAboeRV
      uFa5y03jfr3T3Bfp5PXkbjYssX/9IuInHwBQO8oDA+9rlTv1fL5VSfFaYivbov3ocmRNZneC
      NAU8PIpeufpfhbJnYPhWsAwjgoZYrdMrqi5hMlJdFCsia0SlCFFZJy7HSCrBYkxKSRCV9TVZ
      jKnBFz5zziJDxj2GjbG6Ul1PZD2Hk7ueyxmetcJLEQCPw/QtbhmjXK/crS+0R2WdrXovg7HN
      rF9i5PqnBNO3uG9OcMsYYdpZQCDqk6P7EjvYoLX/5K/FSxcANbjCDbx9K3eZsucRCCQk2tU0
      22Mb2RLto+UFpfbCUFvRnLRnuWM+YMScwKr2BGKyzvboRvbEt5JWlvYY/qngpQ2AGgLxqxy3
      jFHumuOUfQMIuP8NWjsD0V76IxvIqC0vXJOnBtO3mbbnGbEmGLMmKVdTQBmZDVo7O+ObGdB7
      f1Bzj+cFL30APA7bd3hoz1Tn/idxRTCFKSORVlro0zvpjXTSHVm3Jlo/3xdqGqcT9gwP7Glm
      7IW6ow3UOtz9bI32rWj04aeIVwHQAKKqz/PAnuK++ZAJe65+MgD1VKkr0sF6rZ31WisJOU5k
      Dd1glouaa8yiW2DGyQaj2c485mO7AioKbVqaTXo3A3rvqvwPfqp4FQDLgOO7zLuLjFszTNiz
      zLrZ+ulQQ0zWaVEStKkpMkqKtJp8xP/L+jMN1YmqLVPFN+sO8rnqyHXOLVLyjKd2BlJKgg1a
      B336Brq1jh9MsvFFw6sAWCFqneE5d5Fpe4FZZ4E5N4fhmbgNFldqej+6FCEm60TlCJH6MkzN
      Kaa6EFP1CnCEiyNcrOo2mOFbOFVDjScXbSQkIpJKRm1hvdZWd5NPKvE1pUp/qngVAGuA2phx
      3iux6AZP5bxXouiVMX0Ls7rdtVpISOiShi5HSCixqmtMC61qiozSQkpNoK1gqO0VHuFVAHyP
      qNUStTVHU1iYvo0jHqnC+U80wgJ1uGAhRpcjROUIuhR55BrzHEix/5TwKgBe4aXGi0lsv8Ir
      rBFeBcArvNR4FQCv8FLjVQC8wkuNVwHwCi81XgXAK7zU+P8BKzzPCmj/GzwAAAAASUVORK5C
      YII=
    </thumbnail>
    <thumbnail height='192' name='Top Clubs By Played Games' width='192'>
      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
      INz3/wEP5chiTso0pgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Top Clubs By Scored Goals' width='192'>
      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
      SQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Total Titles By Countries' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='UEFA ANALYTICS' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
